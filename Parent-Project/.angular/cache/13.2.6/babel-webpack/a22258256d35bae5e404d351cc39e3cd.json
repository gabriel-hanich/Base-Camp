{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/globals/global-vars.service\";\nimport * as i2 from \"../toggle-switch/toggle-switch.component\";\n;\nexport let DisconnectWarningComponent = /*#__PURE__*/(() => {\n  class DisconnectWarningComponent {\n    constructor(globalVars) {\n      this.globalVars = globalVars;\n      this.label2Msg = \"Don't show this again\";\n      this.showMsg = true;\n      this.state = new EventEmitter();\n    }\n\n    ngOnInit() {}\n\n    updateMsgStatus(value) {\n      this.showMsg = value == \"Show this message every time\";\n      this.globalVars.setVar(\"showDisconnect\", JSON.stringify(this.showMsg));\n    }\n\n  }\n\n  DisconnectWarningComponent.ɵfac = function DisconnectWarningComponent_Factory(t) {\n    return new (t || DisconnectWarningComponent)(i0.ɵɵdirectiveInject(i1.GlobalVarsService));\n  };\n\n  DisconnectWarningComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DisconnectWarningComponent,\n    selectors: [[\"app-disconnect-warning\"]],\n    outputs: {\n      state: \"state\"\n    },\n    decls: 11,\n    vars: 4,\n    consts: [[1, \"background-container\"], [1, \"logo-container\"], [\"src\", \"../../../../assets/app-icon.svg\", \"alt\", \"App Icon\", 1, \"logo-img\"], [1, \"heading-text\"], [1, \"toggle-container\"], [3, \"label1\", \"label2\", \"defaultVal\", \"elemID\", \"state\"], [1, \"go-btn\", \"animated-hover\", 3, \"click\"]],\n    template: function DisconnectWarningComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"img\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"h1\", 3);\n        i0.ɵɵtext(4, \"Oops, we cannot connect to the server\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"h2\", 3);\n        i0.ɵɵtext(6, \"Data will be stored locally until a connection can be re-established\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 4)(8, \"app-toggle-switch\", 5);\n        i0.ɵɵlistener(\"state\", function DisconnectWarningComponent_Template_app_toggle_switch_state_8_listener($event) {\n          return ctx.updateMsgStatus($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function DisconnectWarningComponent_Template_button_click_9_listener() {\n          return ctx.state.emit();\n        });\n        i0.ɵɵtext(10, \"Ok\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"label1\", \"Show this message every time\")(\"label2\", ctx.label2Msg)(\"defaultVal\", \"label1\")(\"elemID\", \"initSyncToggle\");\n      }\n    },\n    directives: [i2.ToggleSwitchComponent],\n    styles: [\".background-container[_ngcontent-%COMP%]{background-color:var(--bottom-bg-color);height:70vh;width:70vw;display:flex;flex-direction:column;align-items:center;border-radius:15px 0;animation:scale-in-center .65s ease}.logo-container[_ngcontent-%COMP%]{height:40%}.logo-img[_ngcontent-%COMP%]{height:100%;aspect-ratio:1/1}.heading-text[_ngcontent-%COMP%]{animation:tracking-in-expand .65s ease}.go-btn[_ngcontent-%COMP%]{height:10%;width:35%;cursor:pointer;border:none;margin-top:30px;background-color:var(--mid-bg-color);border-radius:15px 0}\"]\n  });\n  return DisconnectWarningComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}