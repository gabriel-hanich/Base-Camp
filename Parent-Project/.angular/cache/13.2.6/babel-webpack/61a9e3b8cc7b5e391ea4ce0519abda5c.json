{"ast":null,"code":"import { CategoriesListComponent } from '../../ui-components/categories-list/categories-list.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/globals/global-vars.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/select\";\nimport * as i5 from \"@angular/material/core\";\nimport * as i6 from \"../../ui-components/categories-list/categories-list.component\";\n\nfunction NoteWidgetComponent_div_15_mat_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const note_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", note_r4[\"title\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(note_r4[\"title\"]);\n  }\n}\n\nfunction NoteWidgetComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"h4\", 3);\n    i0.ɵɵtext(2, \"Note Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-form-field\", 4)(4, \"mat-select\", 5);\n    i0.ɵɵlistener(\"valueChange\", function NoteWidgetComponent_div_15_Template_mat_select_valueChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.updateSearchTitle($event);\n    });\n    i0.ɵɵtemplate(5, NoteWidgetComponent_div_15_mat_option_5_Template, 2, 2, \"mat-option\", 9);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"value\", ctx_r0.noteList[0][\"title\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.noteList);\n  }\n}\n\nfunction NoteWidgetComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"h4\", 3);\n    i0.ɵɵtext(2, \"Note Tag\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"app-categories-list\", 10);\n    i0.ɵɵlistener(\"categoryList\", function NoteWidgetComponent_div_16_Template_app_categories_list_categoryList_3_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.updateSearchCategory($event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"defaultText\", \"Search Tag\")(\"id\", \"home\");\n  }\n}\n\nfunction NoteWidgetComponent_div_18_p_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tag_r11 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(tag_r11);\n  }\n}\n\nfunction NoteWidgetComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"h1\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 13)(4, \"p\", 14);\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\", 14);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, NoteWidgetComponent_div_18_p_9_Template, 2, 1, \"p\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const note_r9 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(note_r9.title);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 5, note_r9.timeCreated));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"By \", note_r9.author, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", note_r9.categoryList);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", note_r9.content, i0.ɵɵsanitizeHtml);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    widgetCover: a0\n  };\n};\n\nexport let NoteWidgetComponent = /*#__PURE__*/(() => {\n  class NoteWidgetComponent {\n    constructor(globalVars) {\n      this.globalVars = globalVars;\n      this.showSetting = \"newest\";\n      this.noteList = [];\n      this.searchNoteCategoryList = [];\n    }\n\n    ngOnInit() {\n      this.noteList = JSON.parse(this.globalVars.getVar(\"noteList\"));\n      this.searchNoteName = this.noteList[0]['title']; // Load additional data\n\n      let storedWidgets = JSON.parse(this.globalVars.getVar(\"widgetsLayout\"));\n\n      for (var i = 0; i < storedWidgets.length; i++) {\n        if (storedWidgets[i][\"id\"] == this.id) {\n          this.widget = storedWidgets[i];\n          this.widgetIndex = i;\n        }\n      }\n\n      if (this.widget.additionalData) {\n        this.additionalData = new Map(JSON.parse(this.widget.additionalData));\n        this.showSetting = this.additionalData.get(\"showSetting\");\n        this.searchNoteName = this.additionalData.get(\"searchNoteName\");\n        this.searchNoteCategoryList = JSON.parse(this.additionalData.get(\"searchNoteCategoryList\"));\n        setTimeout(() => {\n          if (this.categoryInput) {\n            this.categoryInput.setTaglist(this.searchNoteCategoryList);\n          }\n        }, 50);\n      } else {\n        this.additionalData = new Map();\n        this.additionalData.set(\"showSetting\", this.showSetting);\n        this.additionalData.set(\"searchNoteName\", this.searchNoteName);\n        this.additionalData.set(\"searchNoteCategoryList\", JSON.stringify(this.searchNoteCategoryList));\n      }\n\n      if (this.categoryInput) {\n        this.categoryInput.setTaglist(this.searchNoteCategoryList);\n      }\n\n      this.updateDisplayNote();\n    }\n\n    saveSettings() {\n      let totalWidgetData = JSON.parse(this.globalVars.getVar(\"widgetsLayout\"));\n      this.widget.additionalData = JSON.stringify(Array.from(this.additionalData.entries()));\n      totalWidgetData[this.widgetIndex] = this.widget;\n      this.globalVars.setVar(\"widgetsLayout\", JSON.stringify(totalWidgetData));\n    }\n\n    updateShowSetting(newSelection) {\n      this.showSetting = newSelection;\n      this.additionalData.set(\"showSetting\", newSelection);\n      this.updateDisplayNote();\n    }\n\n    updateSearchTitle(searchTitle) {\n      this.searchNoteName = searchTitle;\n      this.additionalData.set(\"searchNoteName\", searchTitle);\n      this.updateDisplayNote();\n    }\n\n    updateSearchCategory(categoryList) {\n      this.searchNoteCategoryList = categoryList;\n      this.updateDisplayNote();\n      this.additionalData.set(\"searchNoteCategoryList\", JSON.stringify(categoryList));\n    }\n\n    updateDisplayNote() {\n      this.displayNoteList = [];\n\n      if (this.showSetting == \"newest\") {\n        this.displayNoteList = [this.noteList.sort((a, b) => {\n          if (a.timeCreated < b.timeCreated) {\n            return 1;\n          } else if (a.timeCreated > b.timeCreated) {\n            return -1;\n          }\n\n          return 0;\n        })[0]];\n      } else if (this.showSetting == \"set\") {\n        for (var i = 0; i < this.noteList.length; i++) {\n          if (this.noteList[i][\"title\"] == this.searchNoteName) {\n            this.displayNoteList = [this.noteList[i]];\n          }\n        }\n      } else if (this.showSetting == \"tag\") {\n        for (var i = 0; i < this.noteList.length; i++) {\n          let display = false;\n\n          for (var k = 0; k < this.searchNoteCategoryList.length; k++) {\n            if (this.noteList[i]['categoryList'].includes(this.searchNoteCategoryList[k])) {\n              display = true;\n            }\n          }\n\n          if (display) {\n            // Only add the note to the list of at least one of the search tags is present\n            this.displayNoteList.push(this.noteList[i]);\n          }\n        }\n      } else if (this.showSetting == \"random\") {\n        this.displayNoteList = [this.noteList[this.getRandomInt(this.noteList.length)]];\n      }\n\n      this.saveSettings();\n    }\n\n    getRandomInt(max) {\n      return Math.floor(Math.random() * max);\n    }\n\n  }\n\n  NoteWidgetComponent.ɵfac = function NoteWidgetComponent_Factory(t) {\n    return new (t || NoteWidgetComponent)(i0.ɵɵdirectiveInject(i1.GlobalVarsService));\n  };\n\n  NoteWidgetComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NoteWidgetComponent,\n    selectors: [[\"app-note-widget\"]],\n    viewQuery: function NoteWidgetComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(CategoriesListComponent, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.categoryInput = _t.first);\n      }\n    },\n    inputs: {\n      displaySettings: \"displaySettings\",\n      id: \"id\"\n    },\n    decls: 19,\n    vars: 11,\n    consts: [[1, \"note-container\"], [1, \"widget-settings-container\", 3, \"ngClass\"], [1, \"widget-settings-group\"], [1, \"title-text\"], [\"appearance\", \"fill\"], [3, \"value\", \"valueChange\"], [1, \"mat-option\", 3, \"value\"], [\"class\", \"widget-settings-group\", 4, \"ngIf\"], [\"class\", \"note-item-container\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"mat-option\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"defaultText\", \"id\", \"categoryList\"], [1, \"note-item-container\"], [1, \"note-item-heading\", \"tag\", \"heading-tag\"], [1, \"note-item-tags-container\"], [1, \"tag\"], [\"class\", \"tag\", 4, \"ngFor\", \"ngForOf\"], [1, \"note-content\", 3, \"innerHTML\"]],\n    template: function NoteWidgetComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h4\", 3);\n        i0.ɵɵtext(4, \"Show\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-form-field\", 4)(6, \"mat-select\", 5);\n        i0.ɵɵlistener(\"valueChange\", function NoteWidgetComponent_Template_mat_select_valueChange_6_listener($event) {\n          return ctx.updateShowSetting($event);\n        });\n        i0.ɵɵelementStart(7, \"mat-option\", 6);\n        i0.ɵɵtext(8, \"Newest\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mat-option\", 6);\n        i0.ɵɵtext(10, \"Specific Note\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mat-option\", 6);\n        i0.ɵɵtext(12, \"By Tag\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mat-option\", 6);\n        i0.ɵɵtext(14, \"Random\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵtemplate(15, NoteWidgetComponent_div_15_Template, 6, 2, \"div\", 7);\n        i0.ɵɵtemplate(16, NoteWidgetComponent_div_16_Template, 4, 2, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 0);\n        i0.ɵɵtemplate(18, NoteWidgetComponent_div_18_Template, 11, 7, \"div\", 8);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ctx.displaySettings));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"value\", ctx.showSetting);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", \"newest\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"set\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"tag\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"random\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.showSetting == \"set\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showSetting == \"tag\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.displayNoteList);\n      }\n    },\n    directives: [i2.NgClass, i3.MatFormField, i4.MatSelect, i5.MatOption, i2.NgIf, i2.NgForOf, i6.CategoriesListComponent],\n    pipes: [i2.DatePipe],\n    styles: [\".note-container[_ngcontent-%COMP%]{width:100%;height:100%}.title-text[_ngcontent-%COMP%]{margin-left:15px;font-weight:200}.note-container[_ngcontent-%COMP%]{margin-top:0!important;overflow-x:hidden}.note-item-heading[_ngcontent-%COMP%]{transform:translate(-15px)}\"]\n  });\n  return NoteWidgetComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}