{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/globals/global-vars.service\";\nimport * as i2 from \"@tinymce/tinymce-angular\";\n\nconst _c0 = function () {\n  return [\"undo\", \"redo\", \"fullscreen\"];\n};\n\nconst _c1 = function (a1) {\n  return {\n    name: \"history\",\n    items: a1\n  };\n};\n\nconst _c2 = function () {\n  return [\"styles\"];\n};\n\nconst _c3 = function (a1) {\n  return {\n    name: \"styles\",\n    items: a1\n  };\n};\n\nconst _c4 = function () {\n  return [\"image\", \"media\", \"table\"];\n};\n\nconst _c5 = function (a1) {\n  return {\n    name: \"insert\",\n    items: a1\n  };\n};\n\nconst _c6 = function () {\n  return [\"bold\", \"italic\", \"underline\"];\n};\n\nconst _c7 = function (a1) {\n  return {\n    name: \"formatting\",\n    items: a1\n  };\n};\n\nconst _c8 = function () {\n  return [\"alignleft\", \"aligncenter\", \"alignright\", \"alignjustify\"];\n};\n\nconst _c9 = function (a1) {\n  return {\n    name: \"alignment\",\n    items: a1\n  };\n};\n\nconst _c10 = function () {\n  return [\"bullist\", \"numlist\"];\n};\n\nconst _c11 = function (a1) {\n  return {\n    name: \"lists\",\n    items: a1\n  };\n};\n\nconst _c12 = function (a0, a1, a2, a3, a4, a5) {\n  return [a0, a1, a2, a3, a4, a5];\n};\n\nconst _c13 = function (a1, a10) {\n  return {\n    base_url: \"/tinymce\",\n    placeholder: a1,\n    suffix: \".min\",\n    menubar: false,\n    skin: \"oxide-dark\",\n    content_css: \"dark\",\n    outputFormat: \"html\",\n    plugins: \"image lists fullscreen table emoticons \",\n    fullscreen_native: true,\n    browser_spellcheck: true,\n    toolbar: a10\n  };\n};\n\nexport let TextInputComponent = /*#__PURE__*/(() => {\n  class TextInputComponent {\n    constructor(globalVars) {\n      this.globalVars = globalVars;\n      this.userInput = new EventEmitter();\n      this.val = \"\";\n    }\n\n    ngOnInit() {}\n\n    initEditor(event) {\n      // Get the editor obj and set the placeholder text \n      this.editor = event.editor;\n\n      if (this.initText) {\n        event.editor.setContent(this.initText);\n      }\n    }\n\n    setContent(content) {\n      // Manually force the content within the input\n      setTimeout(() => {\n        this.userInput.emit(content);\n        this.editor.setContent(content);\n      }, 150);\n    }\n\n    onKeyPress(event) {\n      // Update parent every key press\n      this.userInput.emit(event.editor.getContent());\n    }\n\n  }\n\n  TextInputComponent.ɵfac = function TextInputComponent_Factory(t) {\n    return new (t || TextInputComponent)(i0.ɵɵdirectiveInject(i1.GlobalVarsService));\n  };\n\n  TextInputComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TextInputComponent,\n    selectors: [[\"app-text-input\"]],\n    inputs: {\n      initText: \"initText\",\n      customId: \"customId\"\n    },\n    outputs: {\n      userInput: \"userInput\"\n    },\n    decls: 2,\n    vars: 30,\n    consts: [[1, \"input-container\"], [\"plugins\", \"Image\", 3, \"id\", \"init\", \"onSelectionChange\", \"onInit\"]],\n    template: function TextInputComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"editor\", 1);\n        i0.ɵɵlistener(\"onSelectionChange\", function TextInputComponent_Template_editor_onSelectionChange_1_listener($event) {\n          return ctx.onKeyPress($event);\n        })(\"onInit\", function TextInputComponent_Template_editor_onInit_1_listener($event) {\n          return ctx.initEditor($event);\n        });\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate1(\"id\", \"\", ctx.customId, \"editor\");\n        i0.ɵɵproperty(\"init\", i0.ɵɵpureFunction2(27, _c13, ctx.innerText, i0.ɵɵpureFunction6(20, _c12, i0.ɵɵpureFunction1(3, _c1, i0.ɵɵpureFunction0(2, _c0)), i0.ɵɵpureFunction1(6, _c3, i0.ɵɵpureFunction0(5, _c2)), i0.ɵɵpureFunction1(9, _c5, i0.ɵɵpureFunction0(8, _c4)), i0.ɵɵpureFunction1(12, _c7, i0.ɵɵpureFunction0(11, _c6)), i0.ɵɵpureFunction1(15, _c9, i0.ɵɵpureFunction0(14, _c8)), i0.ɵɵpureFunction1(18, _c11, i0.ɵɵpureFunction0(17, _c10)))));\n      }\n    },\n    directives: [i2.EditorComponent],\n    styles: [\".input-container[_ngcontent-%COMP%]{width:100%;height:100%;margin-top:0}.editor[_ngcontent-%COMP%]{height:100%;width:100%;background-color:var(--bottom-bg-color)}\"]\n  });\n  return TextInputComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}