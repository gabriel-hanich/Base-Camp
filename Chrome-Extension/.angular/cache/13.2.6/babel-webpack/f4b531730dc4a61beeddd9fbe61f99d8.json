{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/globals/global-vars.service\";\nimport * as i2 from \"src/app/services/connections/connections.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../ui-components/toggle-switch/toggle-switch.component\";\nimport * as i5 from \"@angular/common\";\n\nconst _c0 = function (a0) {\n  return {\n    \"dull\": a0\n  };\n};\n\nexport let UserSettingsComponent = /*#__PURE__*/(() => {\n  class UserSettingsComponent {\n    constructor(globalVars, connections, router) {\n      this.globalVars = globalVars;\n      this.connections = connections;\n      this.router = router;\n      this.userName = \"\";\n      this.email = \"\";\n      this.passwordLength = 0;\n      this.errorMsg = \"\";\n    }\n\n    ngOnInit() {\n      this.doCloudSync = JSON.parse(this.globalVars.getVar(\"doCloudSync\"));\n      this.userName = this.globalVars.getVar(\"userName\");\n      this.email = this.globalVars.getVar(\"userEmail\");\n\n      if (this.doCloudSync) {\n        this.defaultToggleVal = \"label1\";\n        this.passwordLength = parseInt(this.globalVars.getVar(\"passwordLength\")) | 0;\n      } else {\n        this.defaultToggleVal = \"label2\";\n      }\n\n      if (this.email == \"empty\") {\n        this.email = \"No Email Inputted\";\n      }\n    }\n\n    updateCloudState(state) {\n      this.doCloudSync = state === \"Enable Cloud Sync\";\n\n      if (this.doCloudSync) {\n        this.connections.getPublicKey(); // Get the public key if the connection is toggled on\n      }\n\n      this.globalVars.setVar(\"doCloudSync\", JSON.stringify(this.doCloudSync));\n    }\n\n    updateUserSettings(event) {\n      event.preventDefault();\n      this.userName = document.getElementById(\"nameInput\").value;\n      this.globalVars.setVar(\"userName\", this.userName);\n      this.errorMsg = \"Saved :)\";\n      this.showErrorMsg(2500);\n    }\n\n    showErrorMsg(delay) {\n      var _a;\n\n      (_a = document.getElementById(\"errorBox\")) === null || _a === void 0 ? void 0 : _a.classList.add(\"showError\");\n      setTimeout(() => {\n        var _a;\n\n        (_a = document.getElementById(\"errorBox\")) === null || _a === void 0 ? void 0 : _a.classList.remove(\"showError\");\n      }, delay);\n    }\n\n    wipeApp() {\n      if (confirm(\"Are you sure you want to wipe the app.\\nThis will NOT delete data on the cloud, however will erase ALL your data if cloud sync is disabled\")) {\n        localStorage.clear();\n        setTimeout(() => {\n          this.router.navigate([\"setup/user\"]);\n        }, 50);\n      }\n    }\n\n  }\n\n  UserSettingsComponent.ɵfac = function UserSettingsComponent_Factory(t) {\n    return new (t || UserSettingsComponent)(i0.ɵɵdirectiveInject(i1.GlobalVarsService), i0.ɵɵdirectiveInject(i2.ConnectionsService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  UserSettingsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserSettingsComponent,\n    selectors: [[\"app-user-settings\"]],\n    decls: 23,\n    vars: 14,\n    consts: [[1, \"section-container\"], [1, \"heading-text\"], [1, \"toggle-container\"], [3, \"label1\", \"label2\", \"defaultVal\", \"elemID\", \"state\"], [1, \"section-container\", \"large\"], [1, \"form-container\", 3, \"submit\"], [\"userForm\", \"\"], [1, \"form-text\"], [\"type\", \"text\", \"name\", \"Name\", \"id\", \"nameInput\", \"placeholder\", \"Name\", 1, \"form-input\", 3, \"value\"], [1, \"form-text\", 3, \"ngClass\"], [\"type\", \"text\", \"name\", \"Email\", \"id\", \"emailInput\", \"placeholder\", \"Email\", 1, \"form-input\", 3, \"ngClass\", \"disabled\", \"value\"], [1, \"form-btn\", \"animated-hover\", 3, \"click\"], [\"id\", \"errorBox\", 1, \"error-container\"], [1, \"error-text\"], [1, \"animated-hover\", \"wipe-btn\", 3, \"click\"]],\n    template: function UserSettingsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\", 1);\n        i0.ɵɵtext(2, \"Sync your User Data to the cloud\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"app-toggle-switch\", 3);\n        i0.ɵɵlistener(\"state\", function UserSettingsComponent_Template_app_toggle_switch_state_4_listener($event) {\n          return ctx.updateCloudState($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"h3\", 1);\n        i0.ɵɵtext(7, \"User Settings\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"form\", 5, 6);\n        i0.ɵɵlistener(\"submit\", function UserSettingsComponent_Template_form_submit_8_listener($event) {\n          return ctx.updateUserSettings($event);\n        });\n        i0.ɵɵelementStart(10, \"p\", 7);\n        i0.ɵɵtext(11, \"Your Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 8);\n        i0.ɵɵelementStart(13, \"p\", 9);\n        i0.ɵɵtext(14, \"Your Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function UserSettingsComponent_Template_button_click_16_listener($event) {\n          return ctx.updateUserSettings($event);\n        });\n        i0.ɵɵtext(17, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 12)(19, \"h3\", 13);\n        i0.ɵɵtext(20);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function UserSettingsComponent_Template_button_click_21_listener() {\n          return ctx.wipeApp();\n        });\n        i0.ɵɵtext(22, \"Wipe BaseCamp\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"label1\", \"Enable Cloud Sync\")(\"label2\", \"Disable Cloud Sync\")(\"defaultVal\", ctx.defaultToggleVal)(\"elemID\", \"syncToggle\");\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"value\", ctx.userName);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, ctx.doCloudSync == false));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c0, ctx.doCloudSync == false))(\"disabled\", true)(\"value\", ctx.email);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.errorMsg);\n      }\n    },\n    directives: [i4.ToggleSwitchComponent, i5.NgClass],\n    styles: [\".section-container[_ngcontent-%COMP%]{width:100%;height:40%;border-radius:15px 0;margin:auto;background-color:#0000004d;box-shadow:5px 5px 5px #000}.toggle-container[_ngcontent-%COMP%]{height:45%;width:85%;margin:auto}.form-container[_ngcontent-%COMP%]{height:45%;width:85%;margin:auto;display:grid;grid-template-columns:1fr 2fr;grid-row-gap:0px;row-gap:0px;grid-template-rows:auto auto auto}.form-input[_ngcontent-%COMP%]{transition:all .3s ease;margin:0;border:1px red solid;height:40px;background-color:var(--bottom-bg-color);border:none}.form-text[_ngcontent-%COMP%]{transition:all .3s ease}.form-btn[_ngcontent-%COMP%]{width:50%;height:40px;position:relative;left:50%;transform:translate(-50%);margin:70px auto auto;background-color:var(--mid-bg-color);border-radius:15px 0;border:none;cursor:pointer}.large[_ngcontent-%COMP%]{height:60%;margin-top:15px;overflow-y:scroll!important}.heading-text[_ngcontent-%COMP%]{text-align:center}.error-container[_ngcontent-%COMP%]{height:15%;width:100%;background-color:var(--top-bg-color);transform:translate(-100vw);transition:all 1s ease;text-align:center;border-radius:15px 0}.error-text[_ngcontent-%COMP%]{font-size:1.25rem;font-weight:400}.showError[_ngcontent-%COMP%]{transform:translate(0)}.dull[_ngcontent-%COMP%]    {cursor:default!important;opacity:.3!important}.dull[_ngcontent-%COMP%]    :hover{transform:translate(0)!important;box-shadow:none!important}.wipe-btn[_ngcontent-%COMP%]{background-color:#99282a;border:none;position:relative;bottom:15%;left:50%;transform:translate(-50%);width:50%;height:40px}\"]\n  });\n  return UserSettingsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}