{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/globals/global-vars.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../../timetable/timetable-day/timetable-day.component\";\n\nfunction TimetableColumnComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵelement(1, \"app-timetable-day\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"titleText\", ctx_r0.titleText);\n    i0.ɵɵproperty(\"timetableData\", ctx_r0.timetableData)(\"isCurrentWeek\", ctx_r0.isCurrentWeek)(\"displayEmitter\", ctx_r0.toggleEmitter)(\"doTimes\", true);\n  }\n}\n\nexport let TimetableColumnComponent = /*#__PURE__*/(() => {\n  class TimetableColumnComponent {\n    constructor(globalVars) {\n      this.globalVars = globalVars;\n      this.timetableData = [];\n      this.isCurrentWeek = false; // If the week being displayed is the same as the current week\n    }\n\n    ngOnInit() {\n      this.getTimetableData();\n    }\n\n    getTimetableData() {\n      this.titleText = \"\";\n      this.timetableData = [];\n      var displayDate = new Date();\n      let week1Data = JSON.parse(this.globalVars.getVar(\"wk1Data\"));\n      let week2Data = JSON.parse(this.globalVars.getVar(\"wk2Data\"));\n      let displayWeek = this.globalVars.getVar(\"weekLetter\");\n      let wk1IsWkA = JSON.parse(this.globalVars.getVar(\"wk1IsWkA\"));\n      let dayList = [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\n\n      if (this.currentDate === \"today\") {\n        this.isCurrentWeek = true;\n        this.titleText = \"Today\";\n      } else if (this.currentDate === \"tomorrow\") {\n        // Show mondays timetable as 'tomorrows' on Friday and Saturday\n        if (displayDate.getDay() == 5 || displayDate.getDay() == 6) {\n          displayDate.setDate(displayDate.getDate() + (8 - displayDate.getDay()));\n          console.log(displayDate.getDay() - 7);\n          this.titleText = \"Monday next Week\";\n\n          if (displayWeek == \"A\") {\n            // Invert the week as it is monday of NEXT week\n            displayWeek = \"B\";\n          } else {\n            displayWeek = \"A\";\n          }\n        } else {\n          displayDate.setDate(displayDate.getDate() + 1);\n          this.titleText = \"Tomorrow\";\n        }\n\n        this.isCurrentWeek = true;\n      } else if (this.currentDate[this.currentDate.length - 1] === \"A\") {\n        displayWeek = \"a\";\n\n        for (var i = 0; i < 7; i++) {\n          displayDate.setDate(displayDate.getDate() + 1);\n\n          if (this.currentDate.includes(dayList[displayDate.getDay()])) {\n            break;\n          }\n        }\n      }\n\n      if (wk1IsWkA && displayWeek == \"a\" || !wk1IsWkA && displayWeek == \"b\") {\n        // If the data to be shown comes from week 1\n        for (var i = 0; i < week1Data.length; i++) {\n          if (new Date(week1Data[i][0].startDate).getDay() == displayDate.getDay()) {\n            this.timetableData = week1Data[i];\n          }\n        }\n      } else {\n        // If the data do be displayed is from week 2\n        for (var i = 0; i < week2Data.length; i++) {\n          if (new Date(week2Data[i][0].startDate).getDay() == displayDate.getDay()) {\n            this.timetableData = week2Data[i];\n          }\n        }\n      } // Convert each start and end time from string to date\n\n\n      for (var i = 0; i < this.timetableData.length; i++) {\n        this.timetableData[i].startDate = new Date(this.timetableData[i].startDate);\n        this.timetableData[i].endDate = new Date(this.timetableData[i].endDate);\n      }\n    }\n\n  }\n\n  TimetableColumnComponent.ɵfac = function TimetableColumnComponent_Factory(t) {\n    return new (t || TimetableColumnComponent)(i0.ɵɵdirectiveInject(i1.GlobalVarsService));\n  };\n\n  TimetableColumnComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TimetableColumnComponent,\n    selectors: [[\"app-timetable-column\"]],\n    inputs: {\n      toggleEmitter: \"toggleEmitter\",\n      currentDate: \"currentDate\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"row-container\"], [\"class\", \"content-container\", 4, \"ngIf\"], [1, \"content-container\"], [3, \"timetableData\", \"isCurrentWeek\", \"titleText\", \"displayEmitter\", \"doTimes\"]],\n    template: function TimetableColumnComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, TimetableColumnComponent_div_1_Template, 2, 5, \"div\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.timetableData.length > 0);\n      }\n    },\n    directives: [i2.NgIf, i3.TimetableDayComponent],\n    styles: [\".row-container[_ngcontent-%COMP%]{width:100%;height:100%}.settings-container[_ngcontent-%COMP%]{width:100%;height:25%;position:absolute;top:-25%;left:calc(0% - 15px);background-color:var(--bottom-bg-color);transition:all .5s ease;display:flex;flex-direction:row;align-items:center;gap:15px;margin-left:15px;z-index:5!important}.content-container[_ngcontent-%COMP%]{width:100%;height:100%;z-index:3!important}.highlight[_ngcontent-%COMP%]{background-color:var(--mid-bg-color)}.title-text[_ngcontent-%COMP%]{font-weight:200}\"]\n  });\n  return TimetableColumnComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}