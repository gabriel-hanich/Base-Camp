{"ast":null,"code":"import { CategoriesListComponent } from '../../ui-components/categories-list/categories-list.component';\nimport { TextInputComponent } from '../../ui-components/text-input/text-input.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/globals/global-vars.service\";\nimport * as i2 from \"../../ui-components/heading-component/heading-component.component\";\nimport * as i3 from \"../../ui-components/categories-list/categories-list.component\";\nimport * as i4 from \"../../ui-components/text-input/text-input.component\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/select\";\nimport * as i7 from \"@angular/material/core\";\nimport * as i8 from \"@angular/common\";\n\nfunction NotesScreenComponent_div_29_p_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tag_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(tag_r6);\n  }\n}\n\nfunction NotesScreenComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 21)(1, \"h1\", 22);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 23)(4, \"p\", 24);\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\", 24);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, NotesScreenComponent_div_29_p_9_Template, 2, 1, \"p\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"div\", 26);\n    i0.ɵɵelementStart(11, \"div\", 27)(12, \"img\", 28);\n    i0.ɵɵlistener(\"click\", function NotesScreenComponent_div_29_Template_img_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const note_r4 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.deleteNote(note_r4);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"img\", 29);\n    i0.ɵɵlistener(\"click\", function NotesScreenComponent_div_29_Template_img_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const note_r4 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.editNote(note_r4);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const note_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(note_r4.title);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 5, note_r4.timeCreated));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"By \", note_r4.author, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", note_r4.categoryList);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", note_r4.content, i0.ɵɵsanitizeHtml);\n  }\n}\n\nexport let NotesScreenComponent = /*#__PURE__*/(() => {\n  class NotesScreenComponent {\n    constructor(globalVar) {\n      this.globalVar = globalVar; // Current note vars\n\n      this.currentNoteTitle = \"\";\n      this.currentNoteContent = \"\";\n      this.currentCategoryList = []; // Search input vars\n\n      this.searchStr = \"\";\n      this.searchCategories = [];\n      this.sortType = \"newest\";\n    }\n\n    ngOnInit() {\n      this.setNotesList();\n    }\n\n    setNotesList() {\n      // Read the note notelist from vars\n      try {\n        this.noteList = JSON.parse(this.globalVar.getVar(\"noteList\"));\n      } catch (SyntaxError) {\n        this.noteList = [];\n      }\n\n      this.displayNoteList = this.noteList;\n    }\n\n    updateCategoryList(event) {\n      // Update the current category list when it changes\n      this.currentCategoryList = event;\n    }\n\n    updateNoteContent(event) {\n      // Update stored note content on keypress\n      this.currentNoteContent = event;\n    }\n\n    newNote(event) {\n      // Add new note to the list and save the current list to global var\n      event.preventDefault();\n      this.currentNoteTitle = document.getElementById('newNoteTitle').value;\n      setTimeout(() => {\n        this.noteList.push({\n          \"title\": this.currentNoteTitle,\n          \"content\": this.currentNoteContent,\n          \"author\": this.globalVar.getVar('userName'),\n          \"timeCreated\": new Date().getTime(),\n          \"categoryList\": this.currentCategoryList\n        });\n        this.globalVar.setVar(\"noteList\", JSON.stringify(this.noteList));\n        setTimeout(() => {\n          // Remove content from form elems\n          document.getElementById('newNoteTitle').value = \"\";\n          this.textInput.setContent(\"\");\n          this.categoryInput.setTaglist([]);\n          this.refreshDisplayNotes();\n        });\n      }, 50);\n    }\n\n    deleteNote(note) {\n      // Remove selected note\n      for (var i = 0; i < this.noteList.length; i++) {\n        if (this.noteList[i] == note) {\n          this.noteList.splice(i, 1);\n          this.globalVar.setVar(\"noteList\", JSON.stringify(this.noteList));\n          this.refreshDisplayNotes();\n          break;\n        }\n      }\n    }\n\n    editNote(note) {\n      var _a; // Set titleInput, categoryList and noteContentInput to the editable note\n\n\n      (_a = document.getElementById('newNoteContainer')) === null || _a === void 0 ? void 0 : _a.classList.add('extended');\n      document.getElementById('newNoteTitle').value = note.title;\n      this.textInput.setContent(note.content);\n      this.categoryInput.setTaglist(note.categoryList);\n      window.scroll({\n        top: 0,\n        left: 0,\n        behavior: \"smooth\"\n      });\n      setTimeout(() => {\n        this.deleteNote(note); // Remove the note to limit possibility of note being saved twice\n      }, 150);\n    }\n\n    updateSearchString(input) {\n      setTimeout(() => {\n        this.searchStr = input.value;\n        this.refreshDisplayNotes();\n      }, 50);\n    }\n\n    updateSearchCategories(event) {\n      this.searchCategories = event;\n      this.refreshDisplayNotes();\n    }\n\n    updateSortType(type) {\n      this.sortType = type;\n      this.refreshDisplayNotes();\n    }\n\n    refreshDisplayNotes() {\n      // Get notes that fits the categories\n      this.displayNoteList = [];\n      let noteFits = true;\n\n      for (var i = 0; i < this.noteList.length; i++) {\n        // Check to ensure at least part of the title is present\n        if (this.searchStr.toLowerCase().includes(this.noteList[i][\"title\"].toLowerCase()) || this.noteList[i][\"title\"].toLowerCase().includes(this.searchStr.toLowerCase())) {\n          noteFits = true;\n\n          for (var j = 0; j < this.searchCategories.length; j++) {\n            if (!this.noteList[i][\"categoryList\"].includes(this.searchCategories[j])) {\n              noteFits = false;\n            }\n          }\n\n          if (noteFits) {\n            this.displayNoteList.push(this.noteList[i]);\n          }\n        }\n      } // Sort the notes\n\n\n      if (this.sortType == \"newest\") {\n        this.displayNoteList.sort((a, b) => {\n          if (a.timeCreated < b.timeCreated) {\n            return 1;\n          } else if (a.timeCreated > b.timeCreated) {\n            return -1;\n          }\n\n          return 0;\n        });\n      } else if (this.sortType == \"oldest\") {\n        this.displayNoteList.sort((a, b) => {\n          if (a.timeCreated < b.timeCreated) {\n            return -1;\n          } else if (a.timeCreated > b.timeCreated) {\n            return 1;\n          }\n\n          return 0;\n        });\n      } else if (this.sortType == \"alphabetical\") {\n        this.displayNoteList.sort(function (a, b) {\n          var textA = a.title.toUpperCase();\n          var textB = b.title.toUpperCase();\n          return textA < textB ? -1 : textA > textB ? 1 : 0;\n        });\n      }\n    }\n\n  }\n\n  NotesScreenComponent.ɵfac = function NotesScreenComponent_Factory(t) {\n    return new (t || NotesScreenComponent)(i0.ɵɵdirectiveInject(i1.GlobalVarsService));\n  };\n\n  NotesScreenComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NotesScreenComponent,\n    selectors: [[\"app-notes-screen\"]],\n    viewQuery: function NotesScreenComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(TextInputComponent, 5);\n        i0.ɵɵviewQuery(CategoriesListComponent, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.categoryInput = _t.first);\n      }\n    },\n    decls: 30,\n    vars: 10,\n    consts: [[1, \"heading-component-container\"], [\"line1Text\", \"Your Notes\"], [\"id\", \"newNoteContainer\", 1, \"newNote-container\"], [\"newNoteContainer\", \"\"], [\"action\", \"\"], [1, \"newNote-span\"], [\"type\", \"text\", \"placeholder\", \"Take a note...\", \"autocomplete\", \"off\", \"id\", \"newNoteTitle\", 1, \"newNote-input\", 3, \"focus\"], [\"newNoteTitle\", \"\"], [1, \"newNote-btn\", \"animated-hover\", 3, \"click\"], [1, \"newNote-categories\", 3, \"defaultText\", \"id\", \"categoryList\"], [1, \"newNote-rich\", 3, \"type\", \"userInput\"], [1, \"search-container\"], [1, \"search-heading\"], [\"type\", \"text\", \"placeholder\", \"Search\", \"autocomplete\", \"off\", \"id\", \"searchInput\", 1, \"newNote-input\", \"search-input\", 3, \"keyup\"], [\"searchInput\", \"\"], [1, \"newNote-categories\", \"search-categories\", 3, \"defaultText\", \"id\", \"categoryList\"], [\"appearance\", \"fill\", 1, \"search-sort\"], [3, \"value\", \"valueChange\"], [1, \"mat-option\", 3, \"value\"], [1, \"note-container\"], [\"class\", \"note-item-container\", 4, \"ngFor\", \"ngForOf\"], [1, \"note-item-container\"], [1, \"note-item-heading\", \"tag\", \"heading-tag\"], [1, \"note-item-tags-container\"], [1, \"tag\"], [\"class\", \"tag\", 4, \"ngFor\", \"ngForOf\"], [1, \"note-content\", 3, \"innerHTML\"], [1, \"note-item-bottomBar\"], [\"src\", \"../../../../assets/trash.svg\", \"alt\", \"Delete Note\", 1, \"note-item-bottomBar-img\", \"white\", 3, \"click\"], [\"src\", \"../../../../assets/edit.svg\", \"alt\", \"Edit Note\", 1, \"note-item-bottomBar-img\", \"white\", 3, \"click\"]],\n    template: function NotesScreenComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r10 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"app-heading-component\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 2, 3)(4, \"form\", 4)(5, \"span\", 5)(6, \"input\", 6, 7);\n        i0.ɵɵlistener(\"focus\", function NotesScreenComponent_Template_input_focus_6_listener() {\n          i0.ɵɵrestoreView(_r10);\n\n          const _r0 = i0.ɵɵreference(3);\n\n          const _r1 = i0.ɵɵreference(7);\n\n          _r0.classList.add(\"extended\");\n\n          return _r1.placeholder = \"Title\";\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function NotesScreenComponent_Template_button_click_8_listener($event) {\n          i0.ɵɵrestoreView(_r10);\n\n          const _r0 = i0.ɵɵreference(3);\n\n          const _r1 = i0.ɵɵreference(7);\n\n          ctx.newNote($event);\n\n          _r0.classList.remove(\"extended\");\n\n          return _r1.placeholder = \"Take a note...\";\n        });\n        i0.ɵɵtext(9, \"Save\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"app-categories-list\", 9);\n        i0.ɵɵlistener(\"categoryList\", function NotesScreenComponent_Template_app_categories_list_categoryList_10_listener($event) {\n          return ctx.updateCategoryList($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"app-text-input\", 10);\n        i0.ɵɵlistener(\"userInput\", function NotesScreenComponent_Template_app_text_input_userInput_11_listener($event) {\n          return ctx.updateNoteContent($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(12, \"div\", 11)(13, \"h1\", 12);\n        i0.ɵɵtext(14, \"Search your Notes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 13, 14);\n        i0.ɵɵlistener(\"keyup\", function NotesScreenComponent_Template_input_keyup_15_listener() {\n          i0.ɵɵrestoreView(_r10);\n\n          const _r2 = i0.ɵɵreference(16);\n\n          return ctx.updateSearchString(_r2);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"app-categories-list\", 15);\n        i0.ɵɵlistener(\"categoryList\", function NotesScreenComponent_Template_app_categories_list_categoryList_17_listener($event) {\n          return ctx.updateSearchCategories($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"mat-form-field\", 16)(19, \"mat-label\");\n        i0.ɵɵtext(20, \"Sort By\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"mat-select\", 17);\n        i0.ɵɵlistener(\"valueChange\", function NotesScreenComponent_Template_mat_select_valueChange_21_listener($event) {\n          return ctx.updateSortType($event);\n        });\n        i0.ɵɵelementStart(22, \"mat-option\", 18);\n        i0.ɵɵtext(23, \"Newest First\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"mat-option\", 18);\n        i0.ɵɵtext(25, \"Oldest First\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"mat-option\", 18);\n        i0.ɵɵtext(27, \"Alphabetical\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(28, \"div\", 19);\n        i0.ɵɵtemplate(29, NotesScreenComponent_div_29_Template, 14, 7, \"div\", 20);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"defaultText\", \"New Tag\")(\"id\", \"newNote\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"type\", \"note\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"defaultText\", \"Search Tag\")(\"id\", \"searchList\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"value\", \"newest\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", \"newest\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"oldest\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"alphabetical\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.displayNoteList);\n      }\n    },\n    directives: [i2.HeadingComponentComponent, i3.CategoriesListComponent, i4.TextInputComponent, i5.MatFormField, i5.MatLabel, i6.MatSelect, i7.MatOption, i8.NgForOf],\n    pipes: [i8.DatePipe],\n    styles: [\".newNote-container[_ngcontent-%COMP%]{gap:15px;height:95px;width:95vw;margin:25px auto auto;transition:all .5s ease;overflow-y:hidden}.newNote-span[_ngcontent-%COMP%]{display:flex;flex-direction:row;gap:15px;width:95vw;align-items:center;justify-content:center}.newNote-categories[_ngcontent-%COMP%]{width:95vw;height:25px;margin-bottom:10px}.newNote-input[_ngcontent-%COMP%]{flex:.85;height:75px;width:100%;background-color:var(--bottom-bg-color);border:none;margin-top:15px;margin-bottom:15px;margin-left:15px;border-radius:15px 0;font-size:2rem}.newNote-rich[_ngcontent-%COMP%]{margin-top:15px!important;height:300px!important;z-index:4!important}.newNote-btn[_ngcontent-%COMP%]{flex:.1;height:55px;width:100%;background-color:var(--mid-bg-color);border-radius:15px 0;transform:translateY(-5px);border:none}.search-container[_ngcontent-%COMP%]{width:95%;margin-top:15px;margin-left:20px;margin-bottom:0;padding:0}.search-heading[_ngcontent-%COMP%]{margin-bottom:0;text-align:center}.search-input[_ngcontent-%COMP%]{width:45%;margin-top:10px!important;margin-left:0!important;height:40px!important}.search-sort[_ngcontent-%COMP%]{margin-top:15px}.note-container[_ngcontent-%COMP%]{width:95%;height:-moz-fit-content;height:fit-content;margin:100px auto auto;display:flex;flex-direction:row;flex-wrap:wrap;gap:35px;padding-bottom:150px}.note-item-container[_ngcontent-%COMP%]{width:-moz-fit-content;width:fit-content;height:-moz-fit-content;height:fit-content;background-color:var(--bottom-bg-color);border-radius:15px 0;padding:10px 20px;min-width:400px;max-width:45%;box-shadow:5px 5px 5px #000;transition:all .5s ease}.note-item-heading[_ngcontent-%COMP%]{text-align:center;background-color:#ffffff26;margin:auto;padding:10px 30px!important}.note-item-tags-container[_ngcontent-%COMP%]{width:100%;margin:auto;display:flex;flex-direction:row;flex-wrap:wrap;align-items:left;gap:10px}.note-item-bottomBar[_ngcontent-%COMP%]{height:50px;transition:all .5s ease;margin-top:50px;display:flex;flex-direction:row;gap:5px;align-items:center}.note-item-bottomBar[_ngcontent-%COMP%]:hover{background-color:#00000040}.note-item-bottomBar-img[_ngcontent-%COMP%]{height:65%;width:auto;cursor:pointer;margin-left:15px}.note-content[_ngcontent-%COMP%]     img{width:100%;height:auto;max-height:350px}.note-content[_ngcontent-%COMP%]     table{border:none!important}.note-content[_ngcontent-%COMP%]     tr:nth-child(even){background-color:#00000026}.note-content[_ngcontent-%COMP%]     td, .note-content[_ngcontent-%COMP%]     th{width:-moz-fit-content;width:fit-content;padding:10px 50px;border:1px black solid}.note-content[_ngcontent-%COMP%]     p{font-size:1.2rem}.heading-tag[_ngcontent-%COMP%]{height:35px!important}.extended[_ngcontent-%COMP%]{height:550px;padding-bottom:15px}\"]\n  });\n  return NotesScreenComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}