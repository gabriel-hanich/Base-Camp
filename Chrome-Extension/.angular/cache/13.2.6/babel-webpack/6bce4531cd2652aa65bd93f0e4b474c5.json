{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/globals/global-vars.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/autocomplete\";\nimport * as i4 from \"@angular/material/core\";\n\nfunction CategoriesListComponent_div_4_mat_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tag_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", tag_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", tag_r4, \" \");\n  }\n}\n\nfunction CategoriesListComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"input\", 4);\n    i0.ɵɵlistener(\"keyup\", function CategoriesListComponent_div_4_Template_input_keyup_1_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.readTagData(false);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"mat-autocomplete\", 5, 6);\n    i0.ɵɵlistener(\"optionSelected\", function CategoriesListComponent_div_4_Template_mat_autocomplete_optionSelected_2_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.readTagData(false);\n    });\n    i0.ɵɵtemplate(4, CategoriesListComponent_div_4_mat_option_4_Template, 2, 2, \"mat-option\", 7);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const _r2 = i0.ɵɵreference(3);\n\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMapInterpolate1(\"tag categoryTag categoryTag\", ctx_r0.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMapInterpolate1(\"tagText newCategoryText categoryText\", ctx_r0.id, \"\");\n    i0.ɵɵpropertyInterpolate(\"placeholder\", ctx_r0.defaultText);\n    i0.ɵɵproperty(\"contentEditable\", true)(\"matAutocomplete\", _r2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.filteredTagList);\n  }\n}\n\nexport let CategoriesListComponent = /*#__PURE__*/(() => {\n  class CategoriesListComponent {\n    constructor(globalVars) {\n      this.globalVars = globalVars;\n      this.doAutoFill = true;\n      this.categoryList = new EventEmitter();\n      this.tagList = [];\n      this.tagData = [];\n      this.totalTagList = []; // A list containing all the tags in the system\n\n      this.filteredTagList = [];\n    }\n\n    ngOnInit() {\n      if (this.doAutoFill) {\n        let notesList = JSON.parse(this.globalVars.getVar(\"noteList\"));\n\n        for (var i = 0; i < notesList.length; i++) {\n          for (var k = 0; k < notesList[i]['categoryList'].length; k++) {\n            if (!this.totalTagList.includes(notesList[i]['categoryList'][k])) {\n              this.totalTagList.push(notesList[i]['categoryList'][k]);\n            }\n          }\n        }\n\n        this.filteredTagList = this.totalTagList;\n      }\n    }\n\n    setTaglist(tagList) {\n      this.tagList = [];\n\n      for (var i = 0; i < tagList.length; i++) {\n        this.tagList.push(i);\n      }\n\n      setTimeout(() => {\n        let currentTags = this.cleanTagList(document.getElementsByClassName(\"categoryTag\"), 'categoryTag');\n\n        for (var i = 0; i < currentTags.length; i++) {\n          currentTags[i].children[0].value = tagList[i];\n        }\n\n        this.tagData = tagList;\n        this.categoryList.emit(this.tagData);\n      }, 50);\n    }\n\n    addTag(doFocus) {\n      this.tagList.push(this.tagList.length);\n      setTimeout(() => {\n        this.readTagData(doFocus);\n      }, 50);\n    }\n\n    removeTag() {\n      this.tagList.splice(this.tagList.length - 1, 1);\n      this.tagData.splice(this.tagData.length - 1, 1);\n      this.categoryList.emit(this.tagData);\n    }\n\n    readTagData(doFocus) {\n      let currentTags = this.cleanTagList(document.getElementsByClassName(\"categoryTag\"), \"categoryTag\");\n\n      for (var i = 0; i < currentTags.length; i++) {\n        this.tagData[i] = currentTags[i].children[0].value;\n\n        if (i + 1 == currentTags.length && doFocus) {\n          currentTags[i].childNodes[0].focus();\n        }\n      }\n\n      this.categoryList.emit(this.tagData); // Filter total tag list by most recently inputted tag\n\n      this.filteredTagList = [];\n\n      for (var i = 0; i < this.totalTagList.length; i++) {\n        if (this.totalTagList[i].includes(this.tagData[this.tagData.length - 1])) {\n          this.filteredTagList.push(this.totalTagList[i]);\n        }\n      }\n    }\n\n    enterKeyPress(event) {\n      var _a;\n\n      if (event.key == \"Enter\") {\n        event.preventDefault();\n\n        if ((_a = document.activeElement) === null || _a === void 0 ? void 0 : _a.classList.contains(\"categoryText\" + this.id)) {\n          document.activeElement.blur();\n          setTimeout(() => {\n            this.addTag(true);\n          }, 50);\n        }\n      }\n    }\n\n    cleanTagList(dirtyList, prefix) {\n      // Gets a list of elements and only returns those from this elem\n      let cleanList = [];\n\n      for (var i = 0; i < dirtyList.length; i++) {\n        if (dirtyList[i].classList.contains(prefix.concat(this.id.toString()))) {\n          cleanList.push(dirtyList[i]);\n        }\n      }\n\n      return cleanList;\n    }\n\n  }\n\n  CategoriesListComponent.ɵfac = function CategoriesListComponent_Factory(t) {\n    return new (t || CategoriesListComponent)(i0.ɵɵdirectiveInject(i1.GlobalVarsService));\n  };\n\n  CategoriesListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CategoriesListComponent,\n    selectors: [[\"app-categories-list\"]],\n    hostBindings: function CategoriesListComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function CategoriesListComponent_keydown_HostBindingHandler($event) {\n          return ctx.enterKeyPress($event);\n        }, false, i0.ɵɵresolveDocument);\n      }\n    },\n    inputs: {\n      defaultText: \"defaultText\",\n      id: \"id\",\n      doAutoFill: \"doAutoFill\"\n    },\n    outputs: {\n      categoryList: \"categoryList\"\n    },\n    decls: 5,\n    vars: 7,\n    consts: [[1, \"categories\"], [1, \"tag\", \"addTag\"], [\"src\", \"../../../../assets/close.svg\", \"alt\", \"Add New tag\", 3, \"click\"], [3, \"class\", 4, \"ngFor\", \"ngForOf\"], [3, \"contentEditable\", \"placeholder\", \"matAutocomplete\", \"keyup\"], [3, \"optionSelected\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n    template: function CategoriesListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"img\", 2);\n        i0.ɵɵlistener(\"click\", function CategoriesListComponent_Template_img_click_2_listener() {\n          return ctx.removeTag();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"img\", 2);\n        i0.ɵɵlistener(\"click\", function CategoriesListComponent_Template_img_click_3_listener() {\n          return ctx.addTag(true);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(4, CategoriesListComponent_div_4_Template, 5, 10, \"div\", 3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassMapInterpolate1(\"categories-img-del white removetag\", ctx.id, \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassMapInterpolate1(\"categories-img white addTag\", ctx.id, \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tagList);\n      }\n    },\n    directives: [i2.NgForOf, i3.MatAutocompleteTrigger, i3.MatAutocomplete, i4.MatOption],\n    styles: [\".categories[_ngcontent-%COMP%]{height:100%;width:100%;display:flex;flex-direction:row;flex-wrap:wrap;gap:5px}.categories-img[_ngcontent-%COMP%]{height:25px;width:auto;transform:rotate(45deg);cursor:pointer}.categories-img-del[_ngcontent-%COMP%]{height:25px;width:auto;cursor:pointer}.addTag[_ngcontent-%COMP%]{background-color:var(--mid-bg-color);display:flex;flex-direction:row;justify-content:center;align-items:center;gap:25px}.newCategoryText[_ngcontent-%COMP%]{width:100%;height:125%;border:none!important;background-color:#fff0}\"]\n  });\n  return CategoriesListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}