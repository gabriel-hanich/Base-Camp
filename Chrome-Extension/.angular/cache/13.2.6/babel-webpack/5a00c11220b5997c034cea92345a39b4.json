{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Output, InjectionToken, forwardRef, PLATFORM_ID, Component, Inject, Optional, Input, NgModule } from '@angular/core';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { fromEvent, defer, Subject } from 'rxjs';\nimport { takeUntil, take, mapTo, shareReplay } from 'rxjs/operators';\n/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction EditorComponent_ng_template_0_Template(rf, ctx) {}\n\nconst getTinymce = () => {\n  const w = typeof window !== 'undefined' ? window : undefined;\n  return w && w.tinymce ? w.tinymce : null;\n};\n\nclass Events {\n  constructor() {\n    this.onBeforePaste = new EventEmitter();\n    this.onBlur = new EventEmitter();\n    this.onClick = new EventEmitter();\n    this.onContextMenu = new EventEmitter();\n    this.onCopy = new EventEmitter();\n    this.onCut = new EventEmitter();\n    this.onDblclick = new EventEmitter();\n    this.onDrag = new EventEmitter();\n    this.onDragDrop = new EventEmitter();\n    this.onDragEnd = new EventEmitter();\n    this.onDragGesture = new EventEmitter();\n    this.onDragOver = new EventEmitter();\n    this.onDrop = new EventEmitter();\n    this.onFocus = new EventEmitter();\n    this.onFocusIn = new EventEmitter();\n    this.onFocusOut = new EventEmitter();\n    this.onKeyDown = new EventEmitter();\n    this.onKeyPress = new EventEmitter();\n    this.onKeyUp = new EventEmitter();\n    this.onMouseDown = new EventEmitter();\n    this.onMouseEnter = new EventEmitter();\n    this.onMouseLeave = new EventEmitter();\n    this.onMouseMove = new EventEmitter();\n    this.onMouseOut = new EventEmitter();\n    this.onMouseOver = new EventEmitter();\n    this.onMouseUp = new EventEmitter();\n    this.onPaste = new EventEmitter();\n    this.onSelectionChange = new EventEmitter();\n    this.onActivate = new EventEmitter();\n    this.onAddUndo = new EventEmitter();\n    this.onBeforeAddUndo = new EventEmitter();\n    this.onBeforeExecCommand = new EventEmitter();\n    this.onBeforeGetContent = new EventEmitter();\n    this.onBeforeRenderUI = new EventEmitter();\n    this.onBeforeSetContent = new EventEmitter();\n    this.onChange = new EventEmitter();\n    this.onClearUndos = new EventEmitter();\n    this.onDeactivate = new EventEmitter();\n    this.onDirty = new EventEmitter();\n    this.onExecCommand = new EventEmitter();\n    this.onGetContent = new EventEmitter();\n    this.onHide = new EventEmitter();\n    this.onInit = new EventEmitter();\n    this.onInitNgModel = new EventEmitter();\n    this.onLoadContent = new EventEmitter();\n    this.onNodeChange = new EventEmitter();\n    this.onPostProcess = new EventEmitter();\n    this.onPostRender = new EventEmitter();\n    this.onPreInit = new EventEmitter();\n    this.onPreProcess = new EventEmitter();\n    this.onProgressState = new EventEmitter();\n    this.onRedo = new EventEmitter();\n    this.onRemove = new EventEmitter();\n    this.onReset = new EventEmitter();\n    this.onResizeEditor = new EventEmitter();\n    this.onSaveContent = new EventEmitter();\n    this.onSetAttrib = new EventEmitter();\n    this.onObjectResizeStart = new EventEmitter();\n    this.onObjectResized = new EventEmitter();\n    this.onObjectSelected = new EventEmitter();\n    this.onSetContent = new EventEmitter();\n    this.onShow = new EventEmitter();\n    this.onSubmit = new EventEmitter();\n    this.onUndo = new EventEmitter();\n    this.onVisualAid = new EventEmitter();\n  }\n\n}\n\nEvents.ɵfac = function Events_Factory(t) {\n  return new (t || Events)();\n};\n\nEvents.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: Events,\n  outputs: {\n    onBeforePaste: \"onBeforePaste\",\n    onBlur: \"onBlur\",\n    onClick: \"onClick\",\n    onContextMenu: \"onContextMenu\",\n    onCopy: \"onCopy\",\n    onCut: \"onCut\",\n    onDblclick: \"onDblclick\",\n    onDrag: \"onDrag\",\n    onDragDrop: \"onDragDrop\",\n    onDragEnd: \"onDragEnd\",\n    onDragGesture: \"onDragGesture\",\n    onDragOver: \"onDragOver\",\n    onDrop: \"onDrop\",\n    onFocus: \"onFocus\",\n    onFocusIn: \"onFocusIn\",\n    onFocusOut: \"onFocusOut\",\n    onKeyDown: \"onKeyDown\",\n    onKeyPress: \"onKeyPress\",\n    onKeyUp: \"onKeyUp\",\n    onMouseDown: \"onMouseDown\",\n    onMouseEnter: \"onMouseEnter\",\n    onMouseLeave: \"onMouseLeave\",\n    onMouseMove: \"onMouseMove\",\n    onMouseOut: \"onMouseOut\",\n    onMouseOver: \"onMouseOver\",\n    onMouseUp: \"onMouseUp\",\n    onPaste: \"onPaste\",\n    onSelectionChange: \"onSelectionChange\",\n    onActivate: \"onActivate\",\n    onAddUndo: \"onAddUndo\",\n    onBeforeAddUndo: \"onBeforeAddUndo\",\n    onBeforeExecCommand: \"onBeforeExecCommand\",\n    onBeforeGetContent: \"onBeforeGetContent\",\n    onBeforeRenderUI: \"onBeforeRenderUI\",\n    onBeforeSetContent: \"onBeforeSetContent\",\n    onChange: \"onChange\",\n    onClearUndos: \"onClearUndos\",\n    onDeactivate: \"onDeactivate\",\n    onDirty: \"onDirty\",\n    onExecCommand: \"onExecCommand\",\n    onGetContent: \"onGetContent\",\n    onHide: \"onHide\",\n    onInit: \"onInit\",\n    onInitNgModel: \"onInitNgModel\",\n    onLoadContent: \"onLoadContent\",\n    onNodeChange: \"onNodeChange\",\n    onPostProcess: \"onPostProcess\",\n    onPostRender: \"onPostRender\",\n    onPreInit: \"onPreInit\",\n    onPreProcess: \"onPreProcess\",\n    onProgressState: \"onProgressState\",\n    onRedo: \"onRedo\",\n    onRemove: \"onRemove\",\n    onReset: \"onReset\",\n    onResizeEditor: \"onResizeEditor\",\n    onSaveContent: \"onSaveContent\",\n    onSetAttrib: \"onSetAttrib\",\n    onObjectResizeStart: \"onObjectResizeStart\",\n    onObjectResized: \"onObjectResized\",\n    onObjectSelected: \"onObjectSelected\",\n    onSetContent: \"onSetContent\",\n    onShow: \"onShow\",\n    onSubmit: \"onSubmit\",\n    onUndo: \"onUndo\",\n    onVisualAid: \"onVisualAid\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Events, [{\n    type: Directive\n  }], null, {\n    onBeforePaste: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    onClick: [{\n      type: Output\n    }],\n    onContextMenu: [{\n      type: Output\n    }],\n    onCopy: [{\n      type: Output\n    }],\n    onCut: [{\n      type: Output\n    }],\n    onDblclick: [{\n      type: Output\n    }],\n    onDrag: [{\n      type: Output\n    }],\n    onDragDrop: [{\n      type: Output\n    }],\n    onDragEnd: [{\n      type: Output\n    }],\n    onDragGesture: [{\n      type: Output\n    }],\n    onDragOver: [{\n      type: Output\n    }],\n    onDrop: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onFocusIn: [{\n      type: Output\n    }],\n    onFocusOut: [{\n      type: Output\n    }],\n    onKeyDown: [{\n      type: Output\n    }],\n    onKeyPress: [{\n      type: Output\n    }],\n    onKeyUp: [{\n      type: Output\n    }],\n    onMouseDown: [{\n      type: Output\n    }],\n    onMouseEnter: [{\n      type: Output\n    }],\n    onMouseLeave: [{\n      type: Output\n    }],\n    onMouseMove: [{\n      type: Output\n    }],\n    onMouseOut: [{\n      type: Output\n    }],\n    onMouseOver: [{\n      type: Output\n    }],\n    onMouseUp: [{\n      type: Output\n    }],\n    onPaste: [{\n      type: Output\n    }],\n    onSelectionChange: [{\n      type: Output\n    }],\n    onActivate: [{\n      type: Output\n    }],\n    onAddUndo: [{\n      type: Output\n    }],\n    onBeforeAddUndo: [{\n      type: Output\n    }],\n    onBeforeExecCommand: [{\n      type: Output\n    }],\n    onBeforeGetContent: [{\n      type: Output\n    }],\n    onBeforeRenderUI: [{\n      type: Output\n    }],\n    onBeforeSetContent: [{\n      type: Output\n    }],\n    onChange: [{\n      type: Output\n    }],\n    onClearUndos: [{\n      type: Output\n    }],\n    onDeactivate: [{\n      type: Output\n    }],\n    onDirty: [{\n      type: Output\n    }],\n    onExecCommand: [{\n      type: Output\n    }],\n    onGetContent: [{\n      type: Output\n    }],\n    onHide: [{\n      type: Output\n    }],\n    onInit: [{\n      type: Output\n    }],\n    onInitNgModel: [{\n      type: Output\n    }],\n    onLoadContent: [{\n      type: Output\n    }],\n    onNodeChange: [{\n      type: Output\n    }],\n    onPostProcess: [{\n      type: Output\n    }],\n    onPostRender: [{\n      type: Output\n    }],\n    onPreInit: [{\n      type: Output\n    }],\n    onPreProcess: [{\n      type: Output\n    }],\n    onProgressState: [{\n      type: Output\n    }],\n    onRedo: [{\n      type: Output\n    }],\n    onRemove: [{\n      type: Output\n    }],\n    onReset: [{\n      type: Output\n    }],\n    onResizeEditor: [{\n      type: Output\n    }],\n    onSaveContent: [{\n      type: Output\n    }],\n    onSetAttrib: [{\n      type: Output\n    }],\n    onObjectResizeStart: [{\n      type: Output\n    }],\n    onObjectResized: [{\n      type: Output\n    }],\n    onObjectSelected: [{\n      type: Output\n    }],\n    onSetContent: [{\n      type: Output\n    }],\n    onShow: [{\n      type: Output\n    }],\n    onSubmit: [{\n      type: Output\n    }],\n    onUndo: [{\n      type: Output\n    }],\n    onVisualAid: [{\n      type: Output\n    }]\n  });\n})();\n\nconst validEvents = ['onActivate', 'onAddUndo', 'onBeforeAddUndo', 'onBeforeExecCommand', 'onBeforeGetContent', 'onBeforeRenderUI', 'onBeforeSetContent', 'onBeforePaste', 'onBlur', 'onChange', 'onClearUndos', 'onClick', 'onContextMenu', 'onCopy', 'onCut', 'onDblclick', 'onDeactivate', 'onDirty', 'onDrag', 'onDragDrop', 'onDragEnd', 'onDragGesture', 'onDragOver', 'onDrop', 'onExecCommand', 'onFocus', 'onFocusIn', 'onFocusOut', 'onGetContent', 'onHide', 'onInit', 'onKeyDown', 'onKeyPress', 'onKeyUp', 'onLoadContent', 'onMouseDown', 'onMouseEnter', 'onMouseLeave', 'onMouseMove', 'onMouseOut', 'onMouseOver', 'onMouseUp', 'onNodeChange', 'onObjectResizeStart', 'onObjectResized', 'onObjectSelected', 'onPaste', 'onPostProcess', 'onPostRender', 'onPreProcess', 'onProgressState', 'onRedo', 'onRemove', 'onReset', 'onResizeEditor', 'onSaveContent', 'onSelectionChange', 'onSetAttrib', 'onSetContent', 'onShow', 'onSubmit', 'onUndo', 'onVisualAid'];\n/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n// Caretaker note: `fromEvent` supports passing JQuery-style event targets, the editor has `on` and `off` methods which\n// will be invoked upon subscription and teardown.\n\nconst listenTinyMCEEvent = (editor, eventName, destroy$) => fromEvent(editor, eventName).pipe(takeUntil(destroy$));\n\nconst bindHandlers = (ctx, editor, destroy$) => {\n  const allowedEvents = getValidEvents(ctx);\n  allowedEvents.forEach(eventName => {\n    const eventEmitter = ctx[eventName];\n    listenTinyMCEEvent(editor, eventName.substring(2), destroy$).subscribe(event => {\n      // Caretaker note: `ngZone.run()` runs change detection since it notifies the forked Angular zone that it's\n      // being re-entered. We don't want to run `ApplicationRef.tick()` if anyone listens to the specific event\n      // within the template. E.g. if the `onSelectionChange` is not listened within the template like:\n      // `<editor (onSelectionChange)=\"...\"></editor>`\n      // then its `observers` array will be empty, and we won't run \"dead\" change detection.\n      if (eventEmitter.observers.length > 0) {\n        ctx.ngZone.run(() => eventEmitter.emit({\n          event,\n          editor\n        }));\n      }\n    });\n  });\n};\n\nconst getValidEvents = ctx => {\n  const ignoredEvents = parseStringProperty(ctx.ignoreEvents, []);\n  const allowedEvents = parseStringProperty(ctx.allowedEvents, validEvents).filter(event => validEvents.includes(event) && !ignoredEvents.includes(event));\n  return allowedEvents;\n};\n\nconst parseStringProperty = (property, defaultValue) => {\n  if (typeof property === 'string') {\n    return property.split(',').map(value => value.trim());\n  }\n\n  if (Array.isArray(property)) {\n    return property;\n  }\n\n  return defaultValue;\n};\n\nlet unique = 0;\n\nconst uuid = prefix => {\n  const date = new Date();\n  const time = date.getTime();\n  const random = Math.floor(Math.random() * 1000000000);\n  unique++;\n  return prefix + '_' + random + unique + String(time);\n};\n\nconst isTextarea = element => typeof element !== 'undefined' && element.tagName.toLowerCase() === 'textarea';\n\nconst normalizePluginArray = plugins => {\n  if (typeof plugins === 'undefined' || plugins === '') {\n    return [];\n  }\n\n  return Array.isArray(plugins) ? plugins : plugins.split(' ');\n};\n\nconst mergePlugins = (initPlugins, inputPlugins) => normalizePluginArray(initPlugins).concat(normalizePluginArray(inputPlugins)); // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n\nconst noop = () => {};\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\nconst createState = () => ({\n  script$: null\n});\n\nconst CreateScriptLoader = () => {\n  let state = createState();\n\n  const load = (doc, url) => state.script$ || ( // Caretaker note: the `script$` is a multicast observable since it's piped with `shareReplay`,\n  // so if there're multiple editor components simultaneously on the page, they'll subscribe to the internal\n  // `ReplaySubject`. The script will be loaded only once, and `ReplaySubject` will cache the result.\n  state.script$ = defer(() => {\n    const scriptTag = doc.createElement('script');\n    scriptTag.referrerPolicy = 'origin';\n    scriptTag.type = 'application/javascript';\n    scriptTag.src = url;\n    doc.head.appendChild(scriptTag);\n    return fromEvent(scriptTag, 'load').pipe(take(1), mapTo(undefined));\n  }).pipe(shareReplay({\n    bufferSize: 1,\n    refCount: true\n  }))); // Only to be used by tests.\n\n\n  const reinitialize = () => {\n    state = createState();\n  };\n\n  return {\n    load,\n    reinitialize\n  };\n};\n\nconst ScriptLoader = CreateScriptLoader();\n/* eslint-disable @typescript-eslint/no-parameter-properties */\n\nconst TINYMCE_SCRIPT_SRC = new InjectionToken('TINYMCE_SCRIPT_SRC');\nconst EDITOR_COMPONENT_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => EditorComponent),\n  multi: true\n};\n\nclass EditorComponent extends Events {\n  constructor(elementRef, ngZone, platformId, tinymceScriptSrc) {\n    super();\n    this.platformId = platformId;\n    this.tinymceScriptSrc = tinymceScriptSrc;\n    this.cloudChannel = '6';\n    this.apiKey = 'no-api-key';\n    this.id = '';\n    this.modelEvents = 'change input undo redo';\n    this.onTouchedCallback = noop;\n    this.destroy$ = new Subject();\n\n    this.initialise = () => {\n      const finalInit = Object.assign(Object.assign({}, this.init), {\n        selector: undefined,\n        target: this._element,\n        inline: this.inline,\n        readonly: this.disabled,\n        plugins: mergePlugins(this.init && this.init.plugins, this.plugins),\n        toolbar: this.toolbar || this.init && this.init.toolbar,\n        setup: editor => {\n          this._editor = editor;\n          listenTinyMCEEvent(editor, 'init', this.destroy$).subscribe(() => {\n            this.initEditor(editor);\n          });\n          bindHandlers(this, editor, this.destroy$);\n\n          if (this.init && typeof this.init.setup === 'function') {\n            this.init.setup(editor);\n          }\n        }\n      });\n\n      if (isTextarea(this._element)) {\n        this._element.style.visibility = '';\n      }\n\n      this.ngZone.runOutsideAngular(() => {\n        getTinymce().init(finalInit);\n      });\n    };\n\n    this._elementRef = elementRef;\n    this.ngZone = ngZone;\n  }\n\n  set disabled(val) {\n    var _a;\n\n    this._disabled = val;\n\n    if (this._editor && this._editor.initialized) {\n      if (typeof ((_a = this._editor.mode) === null || _a === void 0 ? void 0 : _a.set) === 'function') {\n        this._editor.mode.set(val ? 'readonly' : 'design');\n      } else {\n        this._editor.setMode(val ? 'readonly' : 'design');\n      }\n    }\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  get editor() {\n    return this._editor;\n  }\n\n  writeValue(value) {\n    if (this._editor && this._editor.initialized) {\n      this._editor.setContent(isNullOrUndefined(value) ? '' : value);\n    } else {\n      this.initialValue = value === null ? undefined : value;\n    }\n  }\n\n  registerOnChange(fn) {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouchedCallback = fn;\n  }\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n\n  ngAfterViewInit() {\n    var _a;\n\n    if (isPlatformBrowser(this.platformId)) {\n      this.id = this.id || uuid('tiny-angular');\n      this.inline = this.inline !== undefined ? this.inline !== false : !!((_a = this.init) === null || _a === void 0 ? void 0 : _a.inline);\n      this.createElement();\n\n      if (getTinymce() !== null) {\n        this.initialise();\n      } else if (this._element && this._element.ownerDocument) {\n        // Caretaker note: the component might be destroyed before the script is loaded and its code is executed.\n        // This will lead to runtime exceptions if `initialise` will be called when the component has been destroyed.\n        ScriptLoader.load(this._element.ownerDocument, this.getScriptSrc()).pipe(takeUntil(this.destroy$)).subscribe(this.initialise);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n\n    if (getTinymce() !== null) {\n      getTinymce().remove(this._editor);\n    }\n  }\n\n  createElement() {\n    const tagName = typeof this.tagName === 'string' ? this.tagName : 'div';\n    this._element = document.createElement(this.inline ? tagName : 'textarea');\n\n    if (this._element) {\n      if (document.getElementById(this.id)) {\n        /* eslint no-console: [\"error\", { allow: [\"warn\"] }] */\n        console.warn(`TinyMCE-Angular: an element with id [${this.id}] already exists. Editors with duplicate Id will not be able to mount`);\n      }\n\n      this._element.id = this.id;\n\n      if (isTextarea(this._element)) {\n        this._element.style.visibility = 'hidden';\n      }\n\n      this._elementRef.nativeElement.appendChild(this._element);\n    }\n  }\n\n  getScriptSrc() {\n    return isNullOrUndefined(this.tinymceScriptSrc) ? `https://cdn.tiny.cloud/1/${this.apiKey}/tinymce/${this.cloudChannel}/tinymce.min.js` : this.tinymceScriptSrc;\n  }\n\n  initEditor(editor) {\n    listenTinyMCEEvent(editor, 'blur', this.destroy$).subscribe(() => {\n      this.ngZone.run(() => this.onTouchedCallback());\n    });\n    listenTinyMCEEvent(editor, this.modelEvents, this.destroy$).subscribe(() => {\n      this.ngZone.run(() => this.emitOnChange(editor));\n    });\n\n    if (typeof this.initialValue === 'string') {\n      this.ngZone.run(() => {\n        editor.setContent(this.initialValue);\n\n        if (editor.getContent() !== this.initialValue) {\n          this.emitOnChange(editor);\n        }\n\n        if (this.onInitNgModel !== undefined) {\n          this.onInitNgModel.emit(editor);\n        }\n      });\n    }\n  }\n\n  emitOnChange(editor) {\n    if (this.onChangeCallback) {\n      this.onChangeCallback(editor.getContent({\n        format: this.outputFormat\n      }));\n    }\n  }\n\n}\n\nEditorComponent.ɵfac = function EditorComponent_Factory(t) {\n  return new (t || EditorComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(TINYMCE_SCRIPT_SRC, 8));\n};\n\nEditorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: EditorComponent,\n  selectors: [[\"editor\"]],\n  inputs: {\n    cloudChannel: \"cloudChannel\",\n    apiKey: \"apiKey\",\n    init: \"init\",\n    id: \"id\",\n    initialValue: \"initialValue\",\n    outputFormat: \"outputFormat\",\n    inline: \"inline\",\n    tagName: \"tagName\",\n    plugins: \"plugins\",\n    toolbar: \"toolbar\",\n    modelEvents: \"modelEvents\",\n    allowedEvents: \"allowedEvents\",\n    ignoreEvents: \"ignoreEvents\",\n    disabled: \"disabled\"\n  },\n  features: [i0.ɵɵProvidersFeature([EDITOR_COMPONENT_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 0,\n  template: function EditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, EditorComponent_ng_template_0_Template, 0, 0, \"ng-template\");\n    }\n  },\n  styles: [\"[_nghost-%COMP%]{display:block}\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'editor',\n      template: '<ng-template></ng-template>',\n      styles: [':host { display: block; }'],\n      providers: [EDITOR_COMPONENT_VALUE_ACCESSOR]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [TINYMCE_SCRIPT_SRC]\n      }]\n    }];\n  }, {\n    cloudChannel: [{\n      type: Input\n    }],\n    apiKey: [{\n      type: Input\n    }],\n    init: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    initialValue: [{\n      type: Input\n    }],\n    outputFormat: [{\n      type: Input\n    }],\n    inline: [{\n      type: Input\n    }],\n    tagName: [{\n      type: Input\n    }],\n    plugins: [{\n      type: Input\n    }],\n    toolbar: [{\n      type: Input\n    }],\n    modelEvents: [{\n      type: Input\n    }],\n    allowedEvents: [{\n      type: Input\n    }],\n    ignoreEvents: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n\nclass EditorModule {}\n\nEditorModule.ɵfac = function EditorModule_Factory(t) {\n  return new (t || EditorModule)();\n};\n\nEditorModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: EditorModule\n});\nEditorModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, FormsModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule],\n      declarations: [EditorComponent],\n      exports: [EditorComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { EditorComponent, EditorModule, TINYMCE_SCRIPT_SRC };","map":{"version":3,"sources":["C:/Users/gabri/Documents/GitHub/Base-Camp/ng-project/node_modules/@tinymce/tinymce-angular/fesm2015/tinymce-tinymce-angular.mjs"],"names":["i0","EventEmitter","Directive","Output","InjectionToken","forwardRef","PLATFORM_ID","Component","Inject","Optional","Input","NgModule","isPlatformBrowser","CommonModule","NG_VALUE_ACCESSOR","FormsModule","fromEvent","defer","Subject","takeUntil","take","mapTo","shareReplay","getTinymce","w","window","undefined","tinymce","Events","constructor","onBeforePaste","onBlur","onClick","onContextMenu","onCopy","onCut","onDblclick","onDrag","onDragDrop","onDragEnd","onDragGesture","onDragOver","onDrop","onFocus","onFocusIn","onFocusOut","onKeyDown","onKeyPress","onKeyUp","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onPaste","onSelectionChange","onActivate","onAddUndo","onBeforeAddUndo","onBeforeExecCommand","onBeforeGetContent","onBeforeRenderUI","onBeforeSetContent","onChange","onClearUndos","onDeactivate","onDirty","onExecCommand","onGetContent","onHide","onInit","onInitNgModel","onLoadContent","onNodeChange","onPostProcess","onPostRender","onPreInit","onPreProcess","onProgressState","onRedo","onRemove","onReset","onResizeEditor","onSaveContent","onSetAttrib","onObjectResizeStart","onObjectResized","onObjectSelected","onSetContent","onShow","onSubmit","onUndo","onVisualAid","ɵfac","ɵdir","type","validEvents","listenTinyMCEEvent","editor","eventName","destroy$","pipe","bindHandlers","ctx","allowedEvents","getValidEvents","forEach","eventEmitter","substring","subscribe","event","observers","length","ngZone","run","emit","ignoredEvents","parseStringProperty","ignoreEvents","filter","includes","property","defaultValue","split","map","value","trim","Array","isArray","unique","uuid","prefix","date","Date","time","getTime","random","Math","floor","String","isTextarea","element","tagName","toLowerCase","normalizePluginArray","plugins","mergePlugins","initPlugins","inputPlugins","concat","noop","isNullOrUndefined","createState","script$","CreateScriptLoader","state","load","doc","url","scriptTag","createElement","referrerPolicy","src","head","appendChild","bufferSize","refCount","reinitialize","ScriptLoader","TINYMCE_SCRIPT_SRC","EDITOR_COMPONENT_VALUE_ACCESSOR","provide","useExisting","EditorComponent","multi","elementRef","platformId","tinymceScriptSrc","cloudChannel","apiKey","id","modelEvents","onTouchedCallback","initialise","finalInit","Object","assign","init","selector","target","_element","inline","readonly","disabled","toolbar","setup","_editor","initEditor","style","visibility","runOutsideAngular","_elementRef","val","_a","_disabled","initialized","mode","set","setMode","writeValue","setContent","initialValue","registerOnChange","fn","onChangeCallback","registerOnTouched","setDisabledState","isDisabled","ngAfterViewInit","ownerDocument","getScriptSrc","ngOnDestroy","next","remove","document","getElementById","console","warn","nativeElement","emitOnChange","getContent","format","outputFormat","ElementRef","NgZone","ɵcmp","args","template","styles","providers","decorators","EditorModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Output, InjectionToken, forwardRef, PLATFORM_ID, Component, Inject, Optional, Input, NgModule } from '@angular/core';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { fromEvent, defer, Subject } from 'rxjs';\nimport { takeUntil, take, mapTo, shareReplay } from 'rxjs/operators';\n\n/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst getTinymce = () => {\n    const w = typeof window !== 'undefined' ? window : undefined;\n    return w && w.tinymce ? w.tinymce : null;\n};\n\nclass Events {\n    constructor() {\n        this.onBeforePaste = new EventEmitter();\n        this.onBlur = new EventEmitter();\n        this.onClick = new EventEmitter();\n        this.onContextMenu = new EventEmitter();\n        this.onCopy = new EventEmitter();\n        this.onCut = new EventEmitter();\n        this.onDblclick = new EventEmitter();\n        this.onDrag = new EventEmitter();\n        this.onDragDrop = new EventEmitter();\n        this.onDragEnd = new EventEmitter();\n        this.onDragGesture = new EventEmitter();\n        this.onDragOver = new EventEmitter();\n        this.onDrop = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.onFocusIn = new EventEmitter();\n        this.onFocusOut = new EventEmitter();\n        this.onKeyDown = new EventEmitter();\n        this.onKeyPress = new EventEmitter();\n        this.onKeyUp = new EventEmitter();\n        this.onMouseDown = new EventEmitter();\n        this.onMouseEnter = new EventEmitter();\n        this.onMouseLeave = new EventEmitter();\n        this.onMouseMove = new EventEmitter();\n        this.onMouseOut = new EventEmitter();\n        this.onMouseOver = new EventEmitter();\n        this.onMouseUp = new EventEmitter();\n        this.onPaste = new EventEmitter();\n        this.onSelectionChange = new EventEmitter();\n        this.onActivate = new EventEmitter();\n        this.onAddUndo = new EventEmitter();\n        this.onBeforeAddUndo = new EventEmitter();\n        this.onBeforeExecCommand = new EventEmitter();\n        this.onBeforeGetContent = new EventEmitter();\n        this.onBeforeRenderUI = new EventEmitter();\n        this.onBeforeSetContent = new EventEmitter();\n        this.onChange = new EventEmitter();\n        this.onClearUndos = new EventEmitter();\n        this.onDeactivate = new EventEmitter();\n        this.onDirty = new EventEmitter();\n        this.onExecCommand = new EventEmitter();\n        this.onGetContent = new EventEmitter();\n        this.onHide = new EventEmitter();\n        this.onInit = new EventEmitter();\n        this.onInitNgModel = new EventEmitter();\n        this.onLoadContent = new EventEmitter();\n        this.onNodeChange = new EventEmitter();\n        this.onPostProcess = new EventEmitter();\n        this.onPostRender = new EventEmitter();\n        this.onPreInit = new EventEmitter();\n        this.onPreProcess = new EventEmitter();\n        this.onProgressState = new EventEmitter();\n        this.onRedo = new EventEmitter();\n        this.onRemove = new EventEmitter();\n        this.onReset = new EventEmitter();\n        this.onResizeEditor = new EventEmitter();\n        this.onSaveContent = new EventEmitter();\n        this.onSetAttrib = new EventEmitter();\n        this.onObjectResizeStart = new EventEmitter();\n        this.onObjectResized = new EventEmitter();\n        this.onObjectSelected = new EventEmitter();\n        this.onSetContent = new EventEmitter();\n        this.onShow = new EventEmitter();\n        this.onSubmit = new EventEmitter();\n        this.onUndo = new EventEmitter();\n        this.onVisualAid = new EventEmitter();\n    }\n}\nEvents.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: Events, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nEvents.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: Events, outputs: { onBeforePaste: \"onBeforePaste\", onBlur: \"onBlur\", onClick: \"onClick\", onContextMenu: \"onContextMenu\", onCopy: \"onCopy\", onCut: \"onCut\", onDblclick: \"onDblclick\", onDrag: \"onDrag\", onDragDrop: \"onDragDrop\", onDragEnd: \"onDragEnd\", onDragGesture: \"onDragGesture\", onDragOver: \"onDragOver\", onDrop: \"onDrop\", onFocus: \"onFocus\", onFocusIn: \"onFocusIn\", onFocusOut: \"onFocusOut\", onKeyDown: \"onKeyDown\", onKeyPress: \"onKeyPress\", onKeyUp: \"onKeyUp\", onMouseDown: \"onMouseDown\", onMouseEnter: \"onMouseEnter\", onMouseLeave: \"onMouseLeave\", onMouseMove: \"onMouseMove\", onMouseOut: \"onMouseOut\", onMouseOver: \"onMouseOver\", onMouseUp: \"onMouseUp\", onPaste: \"onPaste\", onSelectionChange: \"onSelectionChange\", onActivate: \"onActivate\", onAddUndo: \"onAddUndo\", onBeforeAddUndo: \"onBeforeAddUndo\", onBeforeExecCommand: \"onBeforeExecCommand\", onBeforeGetContent: \"onBeforeGetContent\", onBeforeRenderUI: \"onBeforeRenderUI\", onBeforeSetContent: \"onBeforeSetContent\", onChange: \"onChange\", onClearUndos: \"onClearUndos\", onDeactivate: \"onDeactivate\", onDirty: \"onDirty\", onExecCommand: \"onExecCommand\", onGetContent: \"onGetContent\", onHide: \"onHide\", onInit: \"onInit\", onInitNgModel: \"onInitNgModel\", onLoadContent: \"onLoadContent\", onNodeChange: \"onNodeChange\", onPostProcess: \"onPostProcess\", onPostRender: \"onPostRender\", onPreInit: \"onPreInit\", onPreProcess: \"onPreProcess\", onProgressState: \"onProgressState\", onRedo: \"onRedo\", onRemove: \"onRemove\", onReset: \"onReset\", onResizeEditor: \"onResizeEditor\", onSaveContent: \"onSaveContent\", onSetAttrib: \"onSetAttrib\", onObjectResizeStart: \"onObjectResizeStart\", onObjectResized: \"onObjectResized\", onObjectSelected: \"onObjectSelected\", onSetContent: \"onSetContent\", onShow: \"onShow\", onSubmit: \"onSubmit\", onUndo: \"onUndo\", onVisualAid: \"onVisualAid\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: Events, decorators: [{\n            type: Directive\n        }], propDecorators: { onBeforePaste: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }], onClick: [{\n                type: Output\n            }], onContextMenu: [{\n                type: Output\n            }], onCopy: [{\n                type: Output\n            }], onCut: [{\n                type: Output\n            }], onDblclick: [{\n                type: Output\n            }], onDrag: [{\n                type: Output\n            }], onDragDrop: [{\n                type: Output\n            }], onDragEnd: [{\n                type: Output\n            }], onDragGesture: [{\n                type: Output\n            }], onDragOver: [{\n                type: Output\n            }], onDrop: [{\n                type: Output\n            }], onFocus: [{\n                type: Output\n            }], onFocusIn: [{\n                type: Output\n            }], onFocusOut: [{\n                type: Output\n            }], onKeyDown: [{\n                type: Output\n            }], onKeyPress: [{\n                type: Output\n            }], onKeyUp: [{\n                type: Output\n            }], onMouseDown: [{\n                type: Output\n            }], onMouseEnter: [{\n                type: Output\n            }], onMouseLeave: [{\n                type: Output\n            }], onMouseMove: [{\n                type: Output\n            }], onMouseOut: [{\n                type: Output\n            }], onMouseOver: [{\n                type: Output\n            }], onMouseUp: [{\n                type: Output\n            }], onPaste: [{\n                type: Output\n            }], onSelectionChange: [{\n                type: Output\n            }], onActivate: [{\n                type: Output\n            }], onAddUndo: [{\n                type: Output\n            }], onBeforeAddUndo: [{\n                type: Output\n            }], onBeforeExecCommand: [{\n                type: Output\n            }], onBeforeGetContent: [{\n                type: Output\n            }], onBeforeRenderUI: [{\n                type: Output\n            }], onBeforeSetContent: [{\n                type: Output\n            }], onChange: [{\n                type: Output\n            }], onClearUndos: [{\n                type: Output\n            }], onDeactivate: [{\n                type: Output\n            }], onDirty: [{\n                type: Output\n            }], onExecCommand: [{\n                type: Output\n            }], onGetContent: [{\n                type: Output\n            }], onHide: [{\n                type: Output\n            }], onInit: [{\n                type: Output\n            }], onInitNgModel: [{\n                type: Output\n            }], onLoadContent: [{\n                type: Output\n            }], onNodeChange: [{\n                type: Output\n            }], onPostProcess: [{\n                type: Output\n            }], onPostRender: [{\n                type: Output\n            }], onPreInit: [{\n                type: Output\n            }], onPreProcess: [{\n                type: Output\n            }], onProgressState: [{\n                type: Output\n            }], onRedo: [{\n                type: Output\n            }], onRemove: [{\n                type: Output\n            }], onReset: [{\n                type: Output\n            }], onResizeEditor: [{\n                type: Output\n            }], onSaveContent: [{\n                type: Output\n            }], onSetAttrib: [{\n                type: Output\n            }], onObjectResizeStart: [{\n                type: Output\n            }], onObjectResized: [{\n                type: Output\n            }], onObjectSelected: [{\n                type: Output\n            }], onSetContent: [{\n                type: Output\n            }], onShow: [{\n                type: Output\n            }], onSubmit: [{\n                type: Output\n            }], onUndo: [{\n                type: Output\n            }], onVisualAid: [{\n                type: Output\n            }] } });\nconst validEvents = [\n    'onActivate',\n    'onAddUndo',\n    'onBeforeAddUndo',\n    'onBeforeExecCommand',\n    'onBeforeGetContent',\n    'onBeforeRenderUI',\n    'onBeforeSetContent',\n    'onBeforePaste',\n    'onBlur',\n    'onChange',\n    'onClearUndos',\n    'onClick',\n    'onContextMenu',\n    'onCopy',\n    'onCut',\n    'onDblclick',\n    'onDeactivate',\n    'onDirty',\n    'onDrag',\n    'onDragDrop',\n    'onDragEnd',\n    'onDragGesture',\n    'onDragOver',\n    'onDrop',\n    'onExecCommand',\n    'onFocus',\n    'onFocusIn',\n    'onFocusOut',\n    'onGetContent',\n    'onHide',\n    'onInit',\n    'onKeyDown',\n    'onKeyPress',\n    'onKeyUp',\n    'onLoadContent',\n    'onMouseDown',\n    'onMouseEnter',\n    'onMouseLeave',\n    'onMouseMove',\n    'onMouseOut',\n    'onMouseOver',\n    'onMouseUp',\n    'onNodeChange',\n    'onObjectResizeStart',\n    'onObjectResized',\n    'onObjectSelected',\n    'onPaste',\n    'onPostProcess',\n    'onPostRender',\n    'onPreProcess',\n    'onProgressState',\n    'onRedo',\n    'onRemove',\n    'onReset',\n    'onResizeEditor',\n    'onSaveContent',\n    'onSelectionChange',\n    'onSetAttrib',\n    'onSetContent',\n    'onShow',\n    'onSubmit',\n    'onUndo',\n    'onVisualAid'\n];\n\n/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n// Caretaker note: `fromEvent` supports passing JQuery-style event targets, the editor has `on` and `off` methods which\n// will be invoked upon subscription and teardown.\nconst listenTinyMCEEvent = (editor, eventName, destroy$) => fromEvent(editor, eventName).pipe(takeUntil(destroy$));\nconst bindHandlers = (ctx, editor, destroy$) => {\n    const allowedEvents = getValidEvents(ctx);\n    allowedEvents.forEach((eventName) => {\n        const eventEmitter = ctx[eventName];\n        listenTinyMCEEvent(editor, eventName.substring(2), destroy$).subscribe((event) => {\n            // Caretaker note: `ngZone.run()` runs change detection since it notifies the forked Angular zone that it's\n            // being re-entered. We don't want to run `ApplicationRef.tick()` if anyone listens to the specific event\n            // within the template. E.g. if the `onSelectionChange` is not listened within the template like:\n            // `<editor (onSelectionChange)=\"...\"></editor>`\n            // then its `observers` array will be empty, and we won't run \"dead\" change detection.\n            if (eventEmitter.observers.length > 0) {\n                ctx.ngZone.run(() => eventEmitter.emit({ event, editor }));\n            }\n        });\n    });\n};\nconst getValidEvents = (ctx) => {\n    const ignoredEvents = parseStringProperty(ctx.ignoreEvents, []);\n    const allowedEvents = parseStringProperty(ctx.allowedEvents, validEvents).filter((event) => validEvents.includes(event) && !ignoredEvents.includes(event));\n    return allowedEvents;\n};\nconst parseStringProperty = (property, defaultValue) => {\n    if (typeof property === 'string') {\n        return property.split(',').map((value) => value.trim());\n    }\n    if (Array.isArray(property)) {\n        return property;\n    }\n    return defaultValue;\n};\nlet unique = 0;\nconst uuid = (prefix) => {\n    const date = new Date();\n    const time = date.getTime();\n    const random = Math.floor(Math.random() * 1000000000);\n    unique++;\n    return prefix + '_' + random + unique + String(time);\n};\nconst isTextarea = (element) => typeof element !== 'undefined' && element.tagName.toLowerCase() === 'textarea';\nconst normalizePluginArray = (plugins) => {\n    if (typeof plugins === 'undefined' || plugins === '') {\n        return [];\n    }\n    return Array.isArray(plugins) ? plugins : plugins.split(' ');\n};\nconst mergePlugins = (initPlugins, inputPlugins) => normalizePluginArray(initPlugins).concat(normalizePluginArray(inputPlugins));\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => { };\nconst isNullOrUndefined = (value) => value === null || value === undefined;\n\n/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst createState = () => ({\n    script$: null,\n});\nconst CreateScriptLoader = () => {\n    let state = createState();\n    const load = (doc, url) => (state.script$ ||\n        // Caretaker note: the `script$` is a multicast observable since it's piped with `shareReplay`,\n        // so if there're multiple editor components simultaneously on the page, they'll subscribe to the internal\n        // `ReplaySubject`. The script will be loaded only once, and `ReplaySubject` will cache the result.\n        (state.script$ = defer(() => {\n            const scriptTag = doc.createElement('script');\n            scriptTag.referrerPolicy = 'origin';\n            scriptTag.type = 'application/javascript';\n            scriptTag.src = url;\n            doc.head.appendChild(scriptTag);\n            return fromEvent(scriptTag, 'load').pipe(take(1), mapTo(undefined));\n        }).pipe(shareReplay({ bufferSize: 1, refCount: true }))));\n    // Only to be used by tests.\n    const reinitialize = () => {\n        state = createState();\n    };\n    return {\n        load,\n        reinitialize,\n    };\n};\nconst ScriptLoader = CreateScriptLoader();\n\n/* eslint-disable @typescript-eslint/no-parameter-properties */\nconst TINYMCE_SCRIPT_SRC = new InjectionToken('TINYMCE_SCRIPT_SRC');\nconst EDITOR_COMPONENT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => EditorComponent),\n    multi: true\n};\nclass EditorComponent extends Events {\n    constructor(elementRef, ngZone, platformId, tinymceScriptSrc) {\n        super();\n        this.platformId = platformId;\n        this.tinymceScriptSrc = tinymceScriptSrc;\n        this.cloudChannel = '6';\n        this.apiKey = 'no-api-key';\n        this.id = '';\n        this.modelEvents = 'change input undo redo';\n        this.onTouchedCallback = noop;\n        this.destroy$ = new Subject();\n        this.initialise = () => {\n            const finalInit = Object.assign(Object.assign({}, this.init), { selector: undefined, target: this._element, inline: this.inline, readonly: this.disabled, plugins: mergePlugins((this.init && this.init.plugins), this.plugins), toolbar: this.toolbar || (this.init && this.init.toolbar), setup: (editor) => {\n                    this._editor = editor;\n                    listenTinyMCEEvent(editor, 'init', this.destroy$).subscribe(() => {\n                        this.initEditor(editor);\n                    });\n                    bindHandlers(this, editor, this.destroy$);\n                    if (this.init && typeof this.init.setup === 'function') {\n                        this.init.setup(editor);\n                    }\n                } });\n            if (isTextarea(this._element)) {\n                this._element.style.visibility = '';\n            }\n            this.ngZone.runOutsideAngular(() => {\n                getTinymce().init(finalInit);\n            });\n        };\n        this._elementRef = elementRef;\n        this.ngZone = ngZone;\n    }\n    set disabled(val) {\n        var _a;\n        this._disabled = val;\n        if (this._editor && this._editor.initialized) {\n            if (typeof ((_a = this._editor.mode) === null || _a === void 0 ? void 0 : _a.set) === 'function') {\n                this._editor.mode.set(val ? 'readonly' : 'design');\n            }\n            else {\n                this._editor.setMode(val ? 'readonly' : 'design');\n            }\n        }\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    get editor() {\n        return this._editor;\n    }\n    writeValue(value) {\n        if (this._editor && this._editor.initialized) {\n            this._editor.setContent(isNullOrUndefined(value) ? '' : value);\n        }\n        else {\n            this.initialValue = value === null ? undefined : value;\n        }\n    }\n    registerOnChange(fn) {\n        this.onChangeCallback = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouchedCallback = fn;\n    }\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    ngAfterViewInit() {\n        var _a;\n        if (isPlatformBrowser(this.platformId)) {\n            this.id = this.id || uuid('tiny-angular');\n            this.inline = this.inline !== undefined ? this.inline !== false : !!((_a = this.init) === null || _a === void 0 ? void 0 : _a.inline);\n            this.createElement();\n            if (getTinymce() !== null) {\n                this.initialise();\n            }\n            else if (this._element && this._element.ownerDocument) {\n                // Caretaker note: the component might be destroyed before the script is loaded and its code is executed.\n                // This will lead to runtime exceptions if `initialise` will be called when the component has been destroyed.\n                ScriptLoader.load(this._element.ownerDocument, this.getScriptSrc())\n                    .pipe(takeUntil(this.destroy$))\n                    .subscribe(this.initialise);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        if (getTinymce() !== null) {\n            getTinymce().remove(this._editor);\n        }\n    }\n    createElement() {\n        const tagName = typeof this.tagName === 'string' ? this.tagName : 'div';\n        this._element = document.createElement(this.inline ? tagName : 'textarea');\n        if (this._element) {\n            if (document.getElementById(this.id)) {\n                /* eslint no-console: [\"error\", { allow: [\"warn\"] }] */\n                console.warn(`TinyMCE-Angular: an element with id [${this.id}] already exists. Editors with duplicate Id will not be able to mount`);\n            }\n            this._element.id = this.id;\n            if (isTextarea(this._element)) {\n                this._element.style.visibility = 'hidden';\n            }\n            this._elementRef.nativeElement.appendChild(this._element);\n        }\n    }\n    getScriptSrc() {\n        return isNullOrUndefined(this.tinymceScriptSrc) ?\n            `https://cdn.tiny.cloud/1/${this.apiKey}/tinymce/${this.cloudChannel}/tinymce.min.js` :\n            this.tinymceScriptSrc;\n    }\n    initEditor(editor) {\n        listenTinyMCEEvent(editor, 'blur', this.destroy$).subscribe(() => {\n            this.ngZone.run(() => this.onTouchedCallback());\n        });\n        listenTinyMCEEvent(editor, this.modelEvents, this.destroy$).subscribe(() => {\n            this.ngZone.run(() => this.emitOnChange(editor));\n        });\n        if (typeof this.initialValue === 'string') {\n            this.ngZone.run(() => {\n                editor.setContent(this.initialValue);\n                if (editor.getContent() !== this.initialValue) {\n                    this.emitOnChange(editor);\n                }\n                if (this.onInitNgModel !== undefined) {\n                    this.onInitNgModel.emit(editor);\n                }\n            });\n        }\n    }\n    emitOnChange(editor) {\n        if (this.onChangeCallback) {\n            this.onChangeCallback(editor.getContent({ format: this.outputFormat }));\n        }\n    }\n}\nEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: EditorComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: PLATFORM_ID }, { token: TINYMCE_SCRIPT_SRC, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.2\", type: EditorComponent, selector: \"editor\", inputs: { cloudChannel: \"cloudChannel\", apiKey: \"apiKey\", init: \"init\", id: \"id\", initialValue: \"initialValue\", outputFormat: \"outputFormat\", inline: \"inline\", tagName: \"tagName\", plugins: \"plugins\", toolbar: \"toolbar\", modelEvents: \"modelEvents\", allowedEvents: \"allowedEvents\", ignoreEvents: \"ignoreEvents\", disabled: \"disabled\" }, providers: [EDITOR_COMPONENT_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0, template: '<ng-template></ng-template>', isInline: true, styles: [\":host{display:block}\\n\"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: EditorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'editor',\n                    template: '<ng-template></ng-template>',\n                    styles: [':host { display: block; }'],\n                    providers: [EDITOR_COMPONENT_VALUE_ACCESSOR]\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: Object, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [TINYMCE_SCRIPT_SRC]\n                    }] }];\n    }, propDecorators: { cloudChannel: [{\n                type: Input\n            }], apiKey: [{\n                type: Input\n            }], init: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], initialValue: [{\n                type: Input\n            }], outputFormat: [{\n                type: Input\n            }], inline: [{\n                type: Input\n            }], tagName: [{\n                type: Input\n            }], plugins: [{\n                type: Input\n            }], toolbar: [{\n                type: Input\n            }], modelEvents: [{\n                type: Input\n            }], allowedEvents: [{\n                type: Input\n            }], ignoreEvents: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n\nclass EditorModule {\n}\nEditorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: EditorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nEditorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: EditorModule, declarations: [EditorComponent], imports: [CommonModule, FormsModule], exports: [EditorComponent] });\nEditorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: EditorModule, imports: [[CommonModule, FormsModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: EditorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, FormsModule],\n                    declarations: [EditorComponent],\n                    exports: [EditorComponent]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EditorComponent, EditorModule, TINYMCE_SCRIPT_SRC };\n"]},"metadata":{},"sourceType":"module"}